{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "846:2969:25:-:0;;;1440:95:319;1387:148;;1105:255:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:333;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;1263:13:25;1278:5;1285:7;1427:5:22;1434:7;1829:5:319;1836:7;2083:5:318;2075;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2098:17:318;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1874:13:319::1;1855:32;::::0;-1:-1:-1;1920:4:319::1;1897:28;::::0;1962:23:::1;:21;:23::i;:::-;1935:50;::::0;-1:-1:-1;1453:26:22::1;::::0;-1:-1:-1;1465:13:22;1453:11:::1;:26::i;:::-;-1:-1:-1::0;;2541:22:333;;;;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;2541:22;;-1:-1:-1;;;;;;;;;;;;2923:58:333;2651:117;2541:22;2597:25;3633:73;;;;;;2215:25:641;;;2256:18;;;2249:34;;;2299:18;;;2292:34;;;3677:13:333;2342:18:641;;;2335:34;3700:4:333;2385:19:641;;;2378:61;3597:7:333;;2187:19:641;;3633:73:333;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;1304:49:25::1;::::0;-1:-1:-1;1331:21:25;;-1:-1:-1;;1304:26:25::1;:49::i;:::-;1105:255:::0;;;;846:2969;;3293:438:319;3348:7;-1:-1:-1;;;;;;;;;;;3578:6:319;:4;:6::i;:::-;3562:24;;;;;;;3413:297;;;;;;2215:25:641;;;;2256:18;;;2249:34;;;;3608:14:319;2299:18:641;;;2292:34;3644:13:319;2342:18:641;;;2335:34;3687:4:319;2385:19:641;;;2378:61;2187:19;;3413:297:319;;;;;;;;;;;;3386:338;;;;;;3367:357;;3293:438;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;2187:98:318:-;2241:13;2273:5;2266:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98;:::o;846:2969:25:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;846:2969:25;;;-1:-1:-1;846:2969:25;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:641;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:641;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:641:o;1218:733::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1452:40;1482:9;1452:40;:::i;:::-;1536:2;1521:18;;1515:25;1442:50;;-1:-1:-1;;;;;;1589:14:641;;;1586:34;;;1616:1;1613;1606:12;1586:34;1639:61;1692:7;1683:6;1672:9;1668:22;1639:61;:::i;:::-;1629:71;;1746:2;1735:9;1731:18;1725:25;1709:41;;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;;1814:63;1869:7;1858:8;1847:9;1843:24;1814:63;:::i;:::-;1804:73;;;1896:49;1941:2;1930:9;1926:18;1896:49;:::i;:::-;1886:59;;1218:733;;;;;;;:::o;2450:380::-;2529:1;2525:12;;;;2572;;;2593:61;;2647:4;2639:6;2635:17;2625:27;;2593:61;2700:2;2692:6;2689:14;2669:18;2666:38;2663:161;;;2746:10;2741:3;2737:20;2734:1;2727:31;2781:4;2778:1;2771:15;2809:4;2806:1;2799:15;2663:161;;2450:380;;;:::o;:::-;846:2969:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101315760003560e01c806306fdde0314610136578063079fe40e14610161578063095ea7b31461018e57806313af4035146101be57806318160ddd146101e057806323b872dd146101ff578063313ce5671461021f5780633644e5151461023b578063395093511461025057806342966c6814610270578063449a52f8146102905780636f4f2837146102b057806370a08231146102d057806379cc6790146102f05780637ecebe00146103105780638da5cb5b146103305780638f0fefbb14610345578063938e3d7b1461035857806395d89b4114610378578063a457c2d71461038d578063a9059cbb146103ad578063ac9650d8146103cd578063c1b606e2146103fa578063d505accf14610439578063dd62ed3e14610459578063e8a3d48514610479575b600080fd5b34801561014257600080fd5b5061014b61048e565b60405161015891906122de565b60405180910390f35b34801561016d57600080fd5b50610176610520565b6040516001600160a01b039091168152602001610158565b34801561019a57600080fd5b506101ae6101a936600461230d565b61052f565b6040519015158152602001610158565b3480156101ca57600080fd5b506101de6101d9366004612337565b610547565b005b3480156101ec57600080fd5b506004545b604051908152602001610158565b34801561020b57600080fd5b506101ae61021a366004612352565b610580565b34801561022b57600080fd5b5060405160128152602001610158565b34801561024757600080fd5b506101f16105a6565b34801561025c57600080fd5b506101ae61026b36600461230d565b610636565b34801561027c57600080fd5b506101de61028b36600461238e565b610675565b34801561029c57600080fd5b506101de6102ab36600461230d565b6106a7565b3480156102bc57600080fd5b506101de6102cb366004612337565b610720565b3480156102dc57600080fd5b506101f16102eb366004612337565b61074d565b3480156102fc57600080fd5b506101de61030b36600461230d565b610768565b34801561031c57600080fd5b506101f161032b366004612337565b61081d565b34801561033c57600080fd5b5061017661083d565b6101766103533660046123a7565b61084c565b34801561036457600080fd5b506101de610373366004612449565b61091d565b34801561038457600080fd5b5061014b61094a565b34801561039957600080fd5b506101ae6103a836600461230d565b610959565b3480156103b957600080fd5b506101ae6103c836600461230d565b6109f6565b3480156103d957600080fd5b506103ed6103e83660046124f9565b610a04565b604051610158919061256d565b34801561040657600080fd5b5061041a6104153660046123a7565b610af8565b6040805192151583526001600160a01b03909116602083015201610158565b34801561044557600080fd5b506101de6104543660046125cf565b610b3b565b34801561046557600080fd5b506101f1610474366004612642565b610cc1565b34801561048557600080fd5b5061014b610cec565b60606005805461049d90612675565b80601f01602080910402602001604051908101604052809291908181526020018280546104c990612675565b80156105165780601f106104eb57610100808354040283529160200191610516565b820191906000526020600020905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b6008546001600160a01b031690565b60003361053d818585610d7a565b5060019392505050565b61054f610e9e565b6105745760405162461bcd60e51b815260040161056b906126aa565b60405180910390fd5b61057d81610ec1565b50565b60003361058e858285610f13565b610599858585610f8d565b60019150505b9392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105ff57507f000000000000000000000000000000000000000000000000000000000000000046145b1561062957507f000000000000000000000000000000000000000000000000000000000000000090565b610631611149565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061053d90829086906106709087906126e8565b610d7a565b8061067f3361074d565b101561069d5760405162461bcd60e51b815260040161056b90612700565b61057d33826111cb565b6106af610e9e565b6106f55760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604482015260640161056b565b806107125760405162461bcd60e51b815260040161056b9061272c565b61071c8282611307565b5050565b610728610e9e565b6107445760405162461bcd60e51b815260040161056b906126aa565b61057d816113d4565b6001600160a01b031660009081526002602052604090205490565b610770610e9e565b6107b65760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b604482015260640161056b565b806107c08361074d565b10156107de5760405162461bcd60e51b815260040161056b90612700565b6000816107eb8433610cc1565b6107f5919061275a565b905061080383336000610d7a565b61080e833383610d7a565b61081883836111cb565b505050565b6001600160a01b0381166000908152600760205260408120545b92915050565b6001546001600160a01b031690565b6000808460400135116108715760405162461bcd60e51b815260040161056b9061272c565b61087c84848461141e565b9050600061088d6020860186612337565b90506108bc6108a26040870160208801612337565b6108b260a0880160808901612337565b87606001356115ac565b6108ca818660400135611307565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c678760405161090d9190612788565b60405180910390a3509392505050565b610925610e9e565b6109415760405162461bcd60e51b815260040161056b906126aa565b61057d816116ca565b60606006805461049d90612675565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156109de5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161056b565b6109eb8286868403610d7a565b506001949350505050565b60003361053d818585610f8d565b6060816001600160401b03811115610a1e57610a1e612433565b604051908082528060200260200182016040528015610a5157816020015b6060815260200190600190039081610a3c5790505b50905060005b82811015610af157610ac130858584818110610a7557610a7561281e565b9050602002810190610a879190612834565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117ab92505050565b828281518110610ad357610ad361281e565b60200260200101819052508080610ae99061287a565b915050610a57565b5092915050565b600080610b068585856117d0565b60e086013560009081526009602052604090205490915060ff16158015610b315750610b3181611834565b9150935093915050565b83421115610b8b5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161056b565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610bba8c611859565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c37610c176105a6565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610c4782878787611881565b9050896001600160a01b0316816001600160a01b031614610caa5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161056b565b610cb58a8a8a610d7a565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610cf990612675565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2590612675565b8015610d725780601f10610d4757610100808354040283529160200191610d72565b820191906000526020600020905b815481529060010190602001808311610d5557829003601f168201915b505050505081565b6001600160a01b038316610ddc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056b565b6001600160a01b038216610e3d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056b565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ea861083d565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000610f1f8484610cc1565b90506000198114610f875781811015610f7a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056b565b610f878484848403610d7a565b50505050565b6001600160a01b038316610ff15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056b565b6001600160a01b0382166110535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056b565b6001600160a01b038316600090815260026020526040902054818110156110cb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161056b565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906111029084906126e8565b92505081905550826001600160a01b0316846001600160a01b03166000805160206129868339815191528460405161113c91815260200190565b60405180910390a3610f87565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61117461048e565b80516020918201206040516111b093927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6914691309101612895565b60405160208183030381529060405280519060200120905090565b6001600160a01b03821661122b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161056b565b6001600160a01b0382166000908152600260205260409020548181101561129f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161056b565b6001600160a01b03831660009081526002602052604081208383039055600480548492906112ce90849061275a565b90915550506040518281526000906001600160a01b038516906000805160206129868339815191529060200160405180910390a3505050565b6001600160a01b03821661135d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161056b565b806004600082825461136f91906126e8565b90915550506001600160a01b0382166000908152600260205260408120805483929061139c9084906126e8565b90915550506040518181526001600160a01b038316906000906000805160206129868339815191529060200160405180910390a35050565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b60008061142c858585610af8565b925090508061146f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b604482015260640161056b565b4261148060c0870160a088016128c1565b6001600160801b0316111580156114af57506114a260e0860160c087016128c1565b6001600160801b03164211155b6114ed5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b604482015260640161056b565b60006114fc6020870187612337565b6001600160a01b031614156115495760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b604482015260640161056b565b60008560400135116115855760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b604482015260640161056b565b5060e0909301356000908152600960205260409020805460ff191660011790555090919050565b806115e85734156108185760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b604482015260640161056b565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561165a578034146116555760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b604482015260640161056b565b61169d565b341561169d5760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b604482015260640161056b565b60006001600160a01b038416156116b457836116bc565b6116bc610520565b9050610f87833383856118a9565b60008080546116d890612675565b80601f016020809104026020016040519081016040528092919081815260200182805461170490612675565b80156117515780601f1061172657610100808354040283529160200191611751565b820191906000526020600020905b81548152906001019060200180831161173457829003601f168201915b5050855193945061176d936000935060208701925090506121ed565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161179f9291906128dc565b60405180910390a15050565b606061059f838360405180606001604052806027815260200161295f602791396118f3565b600061182c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611826925061181a91508890506119ce565b80519060200120611ac2565b90611acf565b949350505050565b600061183e61083d565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080600061189287878787611af3565b9150915061189f81611bad565b5095945050505050565b806118b357610f87565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156118e7576118e28282611cf6565b610f87565b610f8784848484611d98565b60606118fe84611df1565b6119595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161056b565b600080856001600160a01b031685604051611974919061290a565b600060405180830381855af49150503d80600081146119af576040519150601f19603f3d011682016040523d82523d6000602084013e6119b4565b606091505b50915091506119c4828286611e00565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16119fe6020840184612337565b611a0e6040850160208601612337565b60408501356060860135611a2860a0880160808901612337565b611a3860c0890160a08a016128c1565b611a4860e08a0160c08b016128c1565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610837610c17611e39565b6000806000611ade8585611f27565b91509150611aeb81611bad565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611b205750600090506003611ba4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b74573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b9d57600060019250925050611ba4565b9150600090505b94509492505050565b6000816004811115611bc157611bc1612926565b1415611bca5750565b6001816004811115611bde57611bde612926565b1415611c275760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161056b565b6002816004811115611c3b57611c3b612926565b1415611c895760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161056b565b6003816004811115611c9d57611c9d612926565b141561057d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161056b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611d43576040519150601f19603f3d011682016040523d82523d6000602084013e611d48565b606091505b50509050806108185760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b604482015260640161056b565b816001600160a01b0316836001600160a01b03161415611db757610f87565b6001600160a01b038316301415611ddc576118e26001600160a01b0385168383611f6d565b610f876001600160a01b038516848484611fd0565b6001600160a01b03163b151590565b60608315611e0f57508161059f565b825115611e1f5782518084602001fd5b8160405162461bcd60e51b815260040161056b91906122de565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611e9257507f000000000000000000000000000000000000000000000000000000000000000046145b15611ebc57507f000000000000000000000000000000000000000000000000000000000000000090565b6106317f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612008565b600080825160411415611f5e5760208301516040840151606085015160001a611f5287828585611af3565b94509450505050611f66565b506000905060025b9250929050565b6040516001600160a01b03831660248201526044810182905261081890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612042565b6040516001600160a01b0380851660248301528316604482015260648101829052610f879085906323b872dd60e01b90608401611f99565b60008383834630604051602001612023959493929190612895565b6040516020818303038152906040528051906020012090509392505050565b6000612097826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121149092919063ffffffff16565b80519091501561081857808060200190518101906120b5919061293c565b6108185760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161056b565b606061182c84846000858561212885611df1565b6121745760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056b565b600080866001600160a01b03168587604051612190919061290a565b60006040518083038185875af1925050503d80600081146121cd576040519150601f19603f3d011682016040523d82523d6000602084013e6121d2565b606091505b50915091506121e2828286611e00565b979650505050505050565b8280546121f990612675565b90600052602060002090601f01602090048101928261221b5760008555612261565b82601f1061223457805160ff1916838001178555612261565b82800160010185558215612261579182015b82811115612261578251825591602001919060010190612246565b5061226d929150612271565b5090565b5b8082111561226d5760008155600101612272565b60005b838110156122a1578181015183820152602001612289565b83811115610f875750506000910152565b600081518084526122ca816020860160208601612286565b601f01601f19169290920160200192915050565b60208152600061059f60208301846122b2565b80356001600160a01b038116811461230857600080fd5b919050565b6000806040838503121561232057600080fd5b612329836122f1565b946020939093013593505050565b60006020828403121561234957600080fd5b61059f826122f1565b60008060006060848603121561236757600080fd5b612370846122f1565b925061237e602085016122f1565b9150604084013590509250925092565b6000602082840312156123a057600080fd5b5035919050565b60008060008385036101208112156123be57600080fd5b610100808212156123ce57600080fd5b85945084013590506001600160401b03808211156123eb57600080fd5b818601915086601f8301126123ff57600080fd5b81358181111561240e57600080fd5b87602082850101111561242057600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561245b57600080fd5b81356001600160401b038082111561247257600080fd5b818401915084601f83011261248657600080fd5b81358181111561249857612498612433565b604051601f8201601f19908116603f011681019083821181831017156124c0576124c0612433565b816040528281528760208487010111156124d957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561250c57600080fd5b82356001600160401b038082111561252357600080fd5b818501915085601f83011261253757600080fd5b81358181111561254657600080fd5b8660208260051b850101111561255b57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125c257603f198886030184526125b08583516122b2565b94509285019290850190600101612594565b5092979650505050505050565b600080600080600080600060e0888a0312156125ea57600080fd5b6125f3886122f1565b9650612601602089016122f1565b95506040880135945060608801359350608088013560ff8116811461262557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561265557600080fd5b61265e836122f1565b915061266c602084016122f1565b90509250929050565b600181811c9082168061268957607f821691505b6020821081141561187b57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156126fb576126fb6126d2565b500190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b60008282101561276c5761276c6126d2565b500390565b80356001600160801b038116811461230857600080fd5b61010081016001600160a01b038061279f856122f1565b168352806127af602086016122f1565b1660208401526040840135604084015260608401356060840152806127d6608086016122f1565b166080840152506127e960a08401612771565b6001600160801b0381811660a08501528061280660c08701612771565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261284b57600080fd5b8301803591506001600160401b0382111561286557600080fd5b602001915036819003821315611f6657600080fd5b600060001982141561288e5761288e6126d2565b5060010190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000602082840312156128d357600080fd5b61059f82612771565b6040815260006128ef60408301856122b2565b828103602084015261290181856122b2565b95945050505050565b6000825161291c818460208701612286565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561294e57600080fd5b8151801515811461059f57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122007d7d0175c584f9ca17170e8d21700b0508cf29573f2de8a0d72ac7f3343f06464736f6c634300080c0033",
    "sourceMap": "846:2969:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98:318;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:136;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:641;;;911:51;;899:2;884:18;676:104:136;765:203:641;4464:197:318;;;;;;;;;;-1:-1:-1;4464:197:318;;;;;:::i;:::-;;:::i;:::-;;;1575:14:641;;1568:22;1550:41;;1538:2;1523:18;4464:197:318;1410:187:641;1133:173:132;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;:::-;;3275:106:318;;;;;;;;;;-1:-1:-1;3362:12:318;;3275:106;;;1939:25:641;;;1927:2;1912:18;3275:106:318;1793:177:641;5223:286:318;;;;;;;;;;-1:-1:-1;5223:286:318;;;;;:::i;:::-;;:::i;3124:91::-;;;;;;;;;;-1:-1:-1;3124:91:318;;3206:2;2450:36:641;;2438:2;2423:18;3124:91:318;2308:184:641;3015:272:319;;;;;;;;;;;;;:::i;5904:236:318:-;;;;;;;;;;-1:-1:-1;5904:236:318;;;;;:::i;:::-;;:::i;2445:164:22:-;;;;;;;;;;-1:-1:-1;2445:164:22;;;;;:::i;:::-;;:::i;2013:209::-;;;;;;;;;;-1:-1:-1;2013:209:22;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;3439:125:318:-;;;;;;;;;;-1:-1:-1;3439:125:318;;;;;:::i;:::-;;:::i;2906:430:22:-;;;;;;;;;;-1:-1:-1;2906:430:22;;;;;:::i;:::-;;:::i;2765:126:319:-;;;;;;;;;;-1:-1:-1;2765:126:319;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;;;;:::i;1798:603:25:-;;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2398:102:318:-;;;;;;;;;;;;;:::i;6627:429::-;;;;;;;;;;-1:-1:-1;6627:429:318;;;;;:::i;:::-;;:::i;3760:189::-;;;;;;;;;;-1:-1:-1;3760:189:318;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;868:293:145:-;;;;;;;;;;-1:-1:-1;868:293:145;;;;;:::i;:::-;;:::i;:::-;;;;6323:14:641;;6316:22;6298:41;;-1:-1:-1;;;;;6375:32:641;;;6370:2;6355:18;;6348:60;6271:18;868:293:145;6130:284:641;2053:651:319;;;;;;;;;;-1:-1:-1;2053:651:319;;;;;:::i;:::-;;:::i;4007:149:318:-;;;;;;;;;;-1:-1:-1;4007:149:318;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;2187:98:318:-;2241:13;2273:5;2266:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;4464:197:318:-;4547:4;719:10:325;4601:32:318;719:10:325;4617:7:318;4626:6;4601:8;:32::i;:::-;-1:-1:-1;4650:4:318;;4464:197;-1:-1:-1;;;4464:197:318:o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;5223:286:318:-;5350:4;719:10:325;5406:38:318;5422:4;719:10:325;5437:6:318;5406:15;:38::i;:::-;5454:27;5464:4;5470:2;5474:6;5454:9;:27::i;:::-;5498:4;5491:11;;;5223:286;;;;;;:::o;3015:272:319:-;3073:7;3104:4;-1:-1:-1;;;;;3113:12:319;3096:29;;:66;;;;;3146:16;3129:13;:33;3096:66;3092:189;;;-1:-1:-1;3185:24:319;;3015:272::o;3092:189::-;3247:23;:21;:23::i;:::-;3240:30;;3015:272;:::o;5904:236:318:-;719:10:325;5992:4:318;6071:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6071:27:318;;;;;;;;;;5992:4;;719:10:325;6046:66:318;;719:10:325;;6071:27:318;;:40;;6101:10;;6071:40;:::i;:::-;6046:8;:66::i;2445:164:22:-;2536:7;2511:21;2521:10;2511:9;:21::i;:::-;:32;;2503:63;;;;-1:-1:-1;;;2503:63:22;;;;;;;:::i;:::-;2576:26;2582:10;2594:7;2576:5;:26::i;2013:209::-;2092:10;:8;:10::i;:::-;2084:46;;;;-1:-1:-1;;;2084:46:22;;8924:2:641;2084:46:22;;;8906:21:641;8963:2;8943:18;;;8936:30;-1:-1:-1;;;8982:18:641;;;8975:53;9045:18;;2084:46:22;8722:347:641;2084:46:22;2148:12;2140:45;;;;-1:-1:-1;;;2140:45:22;;;;;;;:::i;:::-;2196:19;2202:3;2207:7;2196:5;:19::i;:::-;2013:209;;:::o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3439:125:318:-;-1:-1:-1;;;;;3539:18:318;3513:7;3539:18;;;:9;:18;;;;;;;3439:125::o;2906:430:22:-;3003:10;:8;:10::i;:::-;2995:46;;;;-1:-1:-1;;;2995:46:22;;9625:2:641;2995:46:22;;;9607:21:641;9664:2;9644:18;;;9637:30;-1:-1:-1;;;9683:18:641;;;9676:53;9746:18;;2995:46:22;9423:347:641;2995:46:22;3082:7;3059:19;3069:8;3059:9;:19::i;:::-;:30;;3051:61;;;;-1:-1:-1;;;3051:61:22;;;;;;;:::i;:::-;3122:26;3185:7;3151:31;3161:8;3171:10;3151:9;:31::i;:::-;:41;;;;:::i;:::-;3122:70;;3202:33;3211:8;3221:10;3233:1;3202:8;:33::i;:::-;3245:50;3254:8;3264:10;3276:18;3245:8;:50::i;:::-;3305:24;3311:8;3321:7;3305:5;:24::i;:::-;2985:351;2906:430;;:::o;2765:126:319:-;-1:-1:-1;;;;;2860:14:319;;2834:7;2860:14;;;:7;:14;;;;;918::326;2860:24:319;2853:31;2765:126;-1:-1:-1;;2765:126:319:o;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1798:603:25:-;1945:14;1999:1;1983:4;:13;;;:17;1975:50;;;;-1:-1:-1;;;1975:50:25;;;;;;;:::i;:::-;2084:33;2100:4;2106:10;;2084:15;:33::i;:::-;2075:42;-1:-1:-1;2128:16:25;2147:7;;;;:4;:7;:::i;:::-;2128:26;-1:-1:-1;2190:74:25;2211:25;;;;;;;;:::i;:::-;2238:13;;;;;;;;:::i;:::-;2253:4;:10;;;2190:20;:74::i;:::-;2299:30;2305:8;2315:4;:13;;;2299:5;:30::i;:::-;2379:8;-1:-1:-1;;;;;2345:49:25;2371:6;-1:-1:-1;;;;;2345:49:25;;2389:4;2345:49;;;;;;:::i;:::-;;;;;;;;1965:436;1798:603;;;;;:::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2398:102:318:-;2454:13;2486:7;2479:14;;;;;:::i;6627:429::-;719:10:325;6720:4:318;6801:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6801:27:318;;;;;;;;;;6720:4;;719:10:325;6846:35:318;;;;6838:85;;;;-1:-1:-1;;;6838:85:318;;11226:2:641;6838:85:318;;;11208:21:641;11265:2;11245:18;;;11238:30;11304:34;11284:18;;;11277:62;-1:-1:-1;;;11355:18:641;;;11348:35;11400:19;;6838:85:318;11024:401:641;6838:85:318;6957:60;6966:5;6973:7;7001:15;6982:16;:34;6957:8;:60::i;:::-;-1:-1:-1;7045:4:318;;6627:429;-1:-1:-1;;;;6627:429:318:o;3760:189::-;3839:4;719:10:325;3893:28:318;719:10:325;3910:2:318;3914:6;3893:9;:28::i;698:319:127:-;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;868:293:145:-;1000:12;1014:14;1053:33;1069:4;1075:10;;1053:15;:33::i;:::-;1114:8;;;;1107:16;;;;:6;:16;;;;;;1044:42;;-1:-1:-1;1107:16:145;;1106:17;:48;;;;;1127:27;1147:6;1127:19;:27::i;:::-;1096:58;;868:293;;;;;;:::o;2053:651:319:-;2288:8;2269:15;:27;;2261:69;;;;-1:-1:-1;;;2261:69:319;;12430:2:641;2261:69:319;;;12412:21:641;12469:2;12449:18;;;12442:30;12508:31;12488:18;;;12481:59;12557:18;;2261:69:319;12228:353:641;2261:69:319;2341:18;2383:16;2401:5;2408:7;2417:5;2424:16;2434:5;2424:9;:16::i;:::-;2372:79;;;;;;12873:25:641;;;;-1:-1:-1;;;;;12972:15:641;;;12952:18;;;12945:43;13024:15;;;;13004:18;;;12997:43;13056:18;;;13049:34;13099:19;;;13092:35;13143:19;;;13136:35;;;12845:19;;2372:79:319;;;;;;;;;;;;2362:90;;;;;;2341:111;;2463:12;2478:53;2500:18;:16;:18::i;:::-;2520:10;8686:4:332;8680:11;-1:-1:-1;;;8704:23:332;;8756:4;8747:14;;8740:39;;;;8808:4;8799:14;;8792:34;8862:4;8847:20;;;8486:397;2478:53:319;2463:68;;2542:14;2559:28;2573:4;2579:1;2582;2585;2559:13;:28::i;:::-;2542:45;;2615:5;-1:-1:-1;;;;;2605:15:319;:6;-1:-1:-1;;;;;2605:15:319;;2597:58;;;;-1:-1:-1;;;2597:58:319;;13384:2:641;2597:58:319;;;13366:21:641;13423:2;13403:18;;;13396:30;13462:32;13442:18;;;13435:60;13512:18;;2597:58:319;13182:354:641;2597:58:319;2666:31;2675:5;2682:7;2691:5;2666:8;:31::i;:::-;2251:453;;;2053:651;;;;;;;:::o;4007:149:318:-;-1:-1:-1;;;;;4122:18:318;;;4096:7;4122:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4007:149::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10154:370:318:-;-1:-1:-1;;;;;10285:19:318;;10277:68;;;;-1:-1:-1;;;10277:68:318;;13743:2:641;10277:68:318;;;13725:21:641;13782:2;13762:18;;;13755:30;13821:34;13801:18;;;13794:62;-1:-1:-1;;;13872:18:641;;;13865:34;13916:19;;10277:68:318;13541:400:641;10277:68:318;-1:-1:-1;;;;;10363:21:318;;10355:68;;;;-1:-1:-1;;;10355:68:318;;14148:2:641;10355:68:318;;;14130:21:641;14187:2;14167:18;;;14160:30;14226:34;14206:18;;;14199:62;-1:-1:-1;;;14277:18:641;;;14270:32;14319:19;;10355:68:318;13946:398:641;10355:68:318;-1:-1:-1;;;;;10434:18:318;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10485:32;;1939:25:641;;;10485:32:318;;1912:18:641;10485:32:318;;;;;;;10154:370;;;:::o;4214:115:22:-;4278:4;4315:7;:5;:7::i;:::-;-1:-1:-1;;;;;4301:21:22;:10;-1:-1:-1;;;;;4301:21:22;;4294:28;;4214:115;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10801:441:318:-;10931:24;10958:25;10968:5;10975:7;10958:9;:25::i;:::-;10931:52;;-1:-1:-1;;10997:16:318;:37;10993:243;;11078:6;11058:16;:26;;11050:68;;;;-1:-1:-1;;;11050:68:318;;14551:2:641;11050:68:318;;;14533:21:641;14590:2;14570:18;;;14563:30;14629:31;14609:18;;;14602:59;14678:18;;11050:68:318;14349:353:641;11050:68:318;11160:51;11169:5;11176:7;11204:6;11185:16;:25;11160:8;:51::i;:::-;10921:321;10801:441;;;:::o;7519:651::-;-1:-1:-1;;;;;7645:18:318;;7637:68;;;;-1:-1:-1;;;7637:68:318;;14909:2:641;7637:68:318;;;14891:21:641;14948:2;14928:18;;;14921:30;14987:34;14967:18;;;14960:62;-1:-1:-1;;;15038:18:641;;;15031:35;15083:19;;7637:68:318;14707:401:641;7637:68:318;-1:-1:-1;;;;;7723:16:318;;7715:64;;;;-1:-1:-1;;;7715:64:318;;15315:2:641;7715:64:318;;;15297:21:641;15354:2;15334:18;;;15327:30;15393:34;15373:18;;;15366:62;-1:-1:-1;;;15444:18:641;;;15437:33;15487:19;;7715:64:318;15113:399:641;7715:64:318;-1:-1:-1;;;;;7861:15:318;;7839:19;7861:15;;;:9;:15;;;;;;7894:21;;;;7886:72;;;;-1:-1:-1;;;7886:72:318;;15719:2:641;7886:72:318;;;15701:21:641;15758:2;15738:18;;;15731:30;15797:34;15777:18;;;15770:62;-1:-1:-1;;;15848:18:641;;;15841:36;15894:19;;7886:72:318;15517:402:641;7886:72:318;-1:-1:-1;;;;;7992:15:318;;;;;;;:9;:15;;;;;;8010:20;;;7992:38;;8050:13;;;;;;;;:23;;8024:6;;7992:15;8050:23;;8024:6;;8050:23;:::i;:::-;;;;;;;;8104:2;-1:-1:-1;;;;;8089:26:318;8098:4;-1:-1:-1;;;;;8089:26:318;-1:-1:-1;;;;;;;;;;;8108:6:318;8089:26;;;;1939:25:641;;1927:2;1912:18;;1793:177;8089:26:318;;;;;;;;8126:37;2906:430:22;3293:438:319;3348:7;3445:95;3578:6;:4;:6::i;:::-;3562:24;;;;;;;3413:297;;;;;3608:14;;3644:13;;3687:4;;3413:297;;:::i;:::-;;;;;;;;;;;;;3386:338;;;;;;3367:357;;3293:438;:::o;9155:576:318:-;-1:-1:-1;;;;;9238:21:318;;9230:67;;;;-1:-1:-1;;;9230:67:318;;16620:2:641;9230:67:318;;;16602:21:641;16659:2;16639:18;;;16632:30;16698:34;16678:18;;;16671:62;-1:-1:-1;;;16749:18:641;;;16742:31;16790:19;;9230:67:318;16418:397:641;9230:67:318;-1:-1:-1;;;;;9393:18:318;;9368:22;9393:18;;;:9;:18;;;;;;9429:24;;;;9421:71;;;;-1:-1:-1;;;9421:71:318;;17022:2:641;9421:71:318;;;17004:21:641;17061:2;17041:18;;;17034:30;17100:34;17080:18;;;17073:62;-1:-1:-1;;;17151:18:641;;;17144:32;17193:19;;9421:71:318;16820:398:641;9421:71:318;-1:-1:-1;;;;;9526:18:318;;;;;;:9;:18;;;;;9547:23;;;9526:44;;9590:12;:22;;9564:6;;9526:18;9590:22;;9564:6;;9590:22;:::i;:::-;;;;-1:-1:-1;;9628:37:318;;1939:25:641;;;9654:1:318;;-1:-1:-1;;;;;9628:37:318;;;-1:-1:-1;;;;;;;;;;;9628:37:318;1927:2:641;1912:18;9628:37:318;;;;;;;2985:351:22;2906:430;;:::o;8446:389:318:-;-1:-1:-1;;;;;8529:21:318;;8521:65;;;;-1:-1:-1;;;8521:65:318;;17425:2:641;8521:65:318;;;17407:21:641;17464:2;17444:18;;;17437:30;17503:33;17483:18;;;17476:61;17554:18;;8521:65:318;17223:355:641;8521:65:318;8673:6;8657:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8689:18:318;;;;;;:9;:18;;;;;:28;;8711:6;;8689:18;:28;;8711:6;;8689:28;:::i;:::-;;;;-1:-1:-1;;8732:37:318;;1939:25:641;;;-1:-1:-1;;;;;8732:37:318;;;8749:1;;-1:-1:-1;;;;;;;;;;;8732:37:318;1927:2:641;1912:18;8732:37:318;;;;;;;2013:209:22;;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;1408:550:145:-;1505:14;1531:12;1573:24;1580:4;1586:10;;1573:6;:24::i;:::-;1553:44;-1:-1:-1;1553:44:145;-1:-1:-1;1553:44:145;1608:35;;;;-1:-1:-1;;;1608:35:145;;17785:2:641;1608:35:145;;;17767:21:641;17824:2;17804:18;;;17797:30;-1:-1:-1;;;17843:18:641;;;17836:45;17898:18;;1608:35:145;17583:339:641;1608:35:145;1705:15;1674:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1674:46:145;;;:94;;;;-1:-1:-1;1743:25:145;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1724:44:145;:15;:44;;1674:94;1653:156;;;;-1:-1:-1;;;1653:156:145;;18320:2:641;1653:156:145;;;18302:21:641;18359:2;18339:18;;;18332:30;-1:-1:-1;;;18378:18:641;;;18371:45;18433:18;;1653:156:145;18118:339:641;1653:156:145;1846:1;1827:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1827:21:145;;;1819:53;;;;-1:-1:-1;;;1819:53:145;;18664:2:641;1819:53:145;;;18646:21:641;18703:2;18683:18;;;18676:30;-1:-1:-1;;;18722:18:641;;;18715:49;18781:18;;1819:53:145;18462:343:641;1819:53:145;1906:1;1890:4;:13;;;:17;1882:35;;;;-1:-1:-1;;;1882:35:145;;19012:2:641;1882:35:145;;;18994:21:641;19051:1;19031:18;;;19024:29;-1:-1:-1;;;19069:18:641;;;19062:35;19114:18;;1882:35:145;18810:328:641;1882:35:145;-1:-1:-1;1935:8:145;;;;;1928:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1928:23:145;1947:4;1928:23;;;-1:-1:-1;1408:550:145;;;-1:-1:-1;1408:550:145:o;3132:681:25:-;3289:11;3285:95;;3324:9;:14;3316:33;;;;-1:-1:-1;;;3316:33:25;;19345:2:641;3316:33:25;;;19327:21:641;19384:1;19364:18;;;19357:29;-1:-1:-1;;;19402:18:641;;;19395:36;19448:18;;3316:33:25;19143:329:641;3285:95:25;-1:-1:-1;;;;;3394:45:25;;397:42:277;3394:45:25;3390:206;;;3476:6;3463:9;:19;3455:54;;;;-1:-1:-1;;;3455:54:25;;19679:2:641;3455:54:25;;;19661:21:641;19718:2;19698:18;;;19691:30;-1:-1:-1;;;19737:18:641;;;19730:52;19799:18;;3455:54:25;19477:346:641;3455:54:25;3390:206;;;3548:9;:14;3540:45;;;;-1:-1:-1;;;3540:45:25;;20030:2:641;3540:45:25;;;20012:21:641;20069:2;20049:18;;;20042:30;-1:-1:-1;;;20088:18:641;;;20081:48;20146:18;;3540:45:25;19828:342:641;3540:45:25;3606:21;-1:-1:-1;;;;;3630:35:25;;;:84;;3693:21;3630:84;;;3668:22;:20;:22::i;:::-;3606:108;;3724:82;3761:9;3772:10;3784:13;3799:6;3724:36;:82::i;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;2032:204:145:-;2134:7;2160:69;2218:10;;2160:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2160:49:145;;-1:-1:-1;2187:20:145;;-1:-1:-1;2202:4:145;;-1:-1:-1;2187:14:145;:20::i;:::-;2177:31;;;;;;2160:16;:49::i;:::-;:57;;:69::i;:::-;2153:76;2032:204;-1:-1:-1;;;;2032:204:145:o;2675:134:25:-;2761:4;2795:7;:5;:7::i;:::-;-1:-1:-1;;;;;2784:18:25;:7;-1:-1:-1;;;;;2784:18:25;;2777:25;;2675:134;;;:::o;3862:203:319:-;-1:-1:-1;;;;;3982:14:319;;3922:15;3982:14;;;:7;:14;;;;;918::326;;1050:1;1032:19;;;;918:14;4041:17:319;3939:126;3862:203;;;:::o;6708:270:332:-;6831:7;6851:17;6870:18;6892:25;6903:4;6909:1;6912;6915;6892:10;:25::i;:::-;6850:67;;;;6927:18;6939:5;6927:11;:18::i;:::-;-1:-1:-1;6962:9:332;6708:270;-1:-1:-1;;;;;6708:270:332:o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;:::-;703:173;;;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;20765:2:641;7087:69:281;;;20747:21:641;20804:2;20784:18;;;20777:30;20843:34;20823:18;;;20816:62;-1:-1:-1;;;20894:18:641;;;20887:36;20940:19;;7087:69:281;20563:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;2308:446:145:-;2382:12;345:207;2479:7;;;;:4;:7;:::i;:::-;2504:25;;;;;;;;:::i;:::-;2547:13;;;;2578:10;;;;2606:13;;;;;;;;:::i;:::-;2637:27;;;;;;;;:::i;:::-;2682:25;;;;;;;;:::i;:::-;2425:322;;;;;;21620:25:641;;;;-1:-1:-1;;;;;21719:15:641;;;21699:18;;;21692:43;21771:15;;;21751:18;;;21744:43;21803:18;;;21796:34;;;;21846:19;;;21839:35;;;;21911:15;;;21890:19;;;21883:44;-1:-1:-1;;;;;22002:15:641;;;2725:8:145;21981:19:641;;;21974:44;;;;22055:15;;22034:19;;;22027:44;2725:8:145;;;22087:19:641;;;22080:35;21592:19;;2425:322:145;;;;;;;;;;;;2406:341;;2308:446;;;:::o;4339:165:333:-;4416:7;4442:55;4464:20;:18;:20::i;3673:227:332:-;3751:7;3771:17;3790:18;3812:27;3823:4;3829:9;3812:10;:27::i;:::-;3770:69;;;;3849:18;3861:5;3849:11;:18::i;:::-;-1:-1:-1;3884:9:332;3673:227;-1:-1:-1;;;3673:227:332:o;5081:1494::-;5207:7;;-1:-1:-1;;;;;6118:79:332;;6114:161;;;-1:-1:-1;6229:1:332;;-1:-1:-1;6233:30:332;6213:51;;6114:161;6386:24;;;6369:14;6386:24;;;;;;;;;22353:25:641;;;22426:4;22414:17;;22394:18;;;22387:45;;;;22448:18;;;22441:34;;;22491:18;;;22484:34;;;6386:24:332;;22325:19:641;;6386:24:332;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6386:24:332;;-1:-1:-1;;6386:24:332;;;-1:-1:-1;;;;;;;6424:20:332;;6420:101;;6476:1;6480:29;6460:50;;;;;;;6420:101;6539:6;-1:-1:-1;6547:20:332;;-1:-1:-1;5081:1494:332;;;;;;;;:::o;582:511::-;659:20;650:5;:29;;;;;;;;:::i;:::-;;646:441;;;582:511;:::o;646:441::-;755:29;746:5;:38;;;;;;;;:::i;:::-;;742:345;;;800:34;;-1:-1:-1;;;800:34:332;;22863:2:641;800:34:332;;;22845:21:641;22902:2;22882:18;;;22875:30;-1:-1:-1;;;22921:18:641;;;22914:54;22985:18;;800:34:332;22661:348:641;742:345:332;864:35;855:5;:44;;;;;;;;:::i;:::-;;851:236;;;915:41;;-1:-1:-1;;;915:41:332;;23216:2:641;915:41:332;;;23198:21:641;23255:2;23235:18;;;23228:30;23294:33;23274:18;;;23267:61;23345:18;;915:41:332;23014:355:641;851:236:332;986:30;977:5;:39;;;;;;;;:::i;:::-;;973:114;;;1032:44;;-1:-1:-1;;;1032:44:332;;23576:2:641;1032:44:332;;;23558:21:641;23615:2;23595:18;;;23588:30;23654:34;23634:18;;;23627:62;-1:-1:-1;;;23705:18:641;;;23698:32;23747:19;;1032:44:332;23374:398:641;2521:292:277;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;24189:2:641;2758:48:277;;;24171:21:641;24228:2;24208:18;;;24201:30;-1:-1:-1;;;24247:18:641;;;24240:58;24315:18;;2758:48:277;23987:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;1137:320:281:-;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;3143:308:333:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:333;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:333;;3143:308::o;3215:230::-;3370:64;3392:10;3404:12;3418:15;3370:21;:64::i;2157:730:332:-;2238:7;2247:12;2275:9;:16;2295:2;2275:22;2271:610;;;2611:4;2596:20;;2590:27;2660:4;2645:20;;2639:27;2717:4;2702:20;;2696:27;2313:9;2688:36;2758:25;2769:4;2688:36;2590:27;2639;2758:10;:25::i;:::-;2751:32;;;;;;;;;2271:610;-1:-1:-1;2830:1:332;;-1:-1:-1;2834:35:332;2271:610;2157:730;;;;;:::o;729:205:321:-;868:58;;-1:-1:-1;;;;;24536:32:641;;868:58:321;;;24518:51:641;24585:18;;;24578:34;;;841:86:321;;861:5;;-1:-1:-1;;;891:23:321;24491:18:641;;868:58:321;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;24881:15:641;;;1105:68:321;;;24863:34:641;24933:15;;24913:18;;;24906:43;24965:18;;;24958:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;24798:18:641;;1105:68:321;24623:375:641;3457:257:333;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;25487:2:641;3839:85:321;;;25469:21:641;25526:2;25506:18;;;25499:30;25565:34;25545:18;;;25538:62;-1:-1:-1;;;25616:18:641;;;25609:40;25666:19;;3839:85:321;25285:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;26305:2:641;5194:60:281;;;26287:21:641;26344:2;26324:18;;;26317:30;26383:31;26363:18;;;26356:59;26432:18;;5194:60:281;26103:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:258:641;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:641;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:641;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:641:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:173::-;1041:20;;-1:-1:-1;;;;;1090:31:641;;1080:42;;1070:70;;1136:1;1133;1126:12;1070:70;973:173;;;:::o;1151:254::-;1219:6;1227;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;1395:2;1380:18;;;;1367:32;;-1:-1:-1;;;1151:254:641:o;1602:186::-;1661:6;1714:2;1702:9;1693:7;1689:23;1685:32;1682:52;;;1730:1;1727;1720:12;1682:52;1753:29;1772:9;1753:29;:::i;1975:328::-;2052:6;2060;2068;2121:2;2109:9;2100:7;2096:23;2092:32;2089:52;;;2137:1;2134;2127:12;2089:52;2160:29;2179:9;2160:29;:::i;:::-;2150:39;;2208:38;2242:2;2231:9;2227:18;2208:38;:::i;:::-;2198:48;;2293:2;2282:9;2278:18;2265:32;2255:42;;1975:328;;;;;:::o;2679:180::-;2738:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:52;;;2807:1;2804;2797:12;2759:52;-1:-1:-1;2830:23:641;;2679:180;-1:-1:-1;2679:180:641:o;2864:765::-;2975:6;2983;2991;3035:9;3026:7;3022:23;3065:3;3061:2;3057:12;3054:32;;;3082:1;3079;3072:12;3054:32;3105:3;3128:2;3124;3120:11;3117:31;;;3144:1;3141;3134:12;3117:31;3167:9;;-1:-1:-1;3212:18:641;;3199:32;;-1:-1:-1;;;;;;3280:14:641;;;3277:34;;;3307:1;3304;3297:12;3277:34;3345:6;3334:9;3330:22;3320:32;;3390:7;3383:4;3379:2;3375:13;3371:27;3361:55;;3412:1;3409;3402:12;3361:55;3452:2;3439:16;3478:2;3470:6;3467:14;3464:34;;;3494:1;3491;3484:12;3464:34;3541:7;3534:4;3525:6;3521:2;3517:15;3513:26;3510:39;3507:59;;;3562:1;3559;3552:12;3507:59;3593:4;3589:2;3585:13;3575:23;;3617:6;3607:16;;;;;2864:765;;;;;:::o;3634:127::-;3695:10;3690:3;3686:20;3683:1;3676:31;3726:4;3723:1;3716:15;3750:4;3747:1;3740:15;3766:922;3835:6;3888:2;3876:9;3867:7;3863:23;3859:32;3856:52;;;3904:1;3901;3894:12;3856:52;3944:9;3931:23;-1:-1:-1;;;;;4014:2:641;4006:6;4003:14;4000:34;;;4030:1;4027;4020:12;4000:34;4068:6;4057:9;4053:22;4043:32;;4113:7;4106:4;4102:2;4098:13;4094:27;4084:55;;4135:1;4132;4125:12;4084:55;4171:2;4158:16;4193:2;4189;4186:10;4183:36;;;4199:18;;:::i;:::-;4274:2;4268:9;4242:2;4328:13;;-1:-1:-1;;4324:22:641;;;4348:2;4320:31;4316:40;4304:53;;;4372:18;;;4392:22;;;4369:46;4366:72;;;4418:18;;:::i;:::-;4458:10;4454:2;4447:22;4493:2;4485:6;4478:18;4533:7;4528:2;4523;4519;4515:11;4511:20;4508:33;4505:53;;;4554:1;4551;4544:12;4505:53;4610:2;4605;4601;4597:11;4592:2;4584:6;4580:15;4567:46;4655:1;4633:15;;;4650:2;4629:24;4622:35;;;;-1:-1:-1;4637:6:641;3766:922;-1:-1:-1;;;;;3766:922:641:o;4693:626::-;4790:6;4798;4851:2;4839:9;4830:7;4826:23;4822:32;4819:52;;;4867:1;4864;4857:12;4819:52;4907:9;4894:23;-1:-1:-1;;;;;4977:2:641;4969:6;4966:14;4963:34;;;4993:1;4990;4983:12;4963:34;5031:6;5020:9;5016:22;5006:32;;5076:7;5069:4;5065:2;5061:13;5057:27;5047:55;;5098:1;5095;5088:12;5047:55;5138:2;5125:16;5164:2;5156:6;5153:14;5150:34;;;5180:1;5177;5170:12;5150:34;5233:7;5228:2;5218:6;5215:1;5211:14;5207:2;5203:23;5199:32;5196:45;5193:65;;;5254:1;5251;5244:12;5193:65;5285:2;5277:11;;;;;5307:6;;-1:-1:-1;4693:626:641;;-1:-1:-1;;;;4693:626:641:o;5324:801::-;5484:4;5513:2;5553;5542:9;5538:18;5583:2;5572:9;5565:21;5606:6;5641;5635:13;5672:6;5664;5657:22;5710:2;5699:9;5695:18;5688:25;;5772:2;5762:6;5759:1;5755:14;5744:9;5740:30;5736:39;5722:53;;5810:2;5802:6;5798:15;5831:1;5841:255;5855:6;5852:1;5849:13;5841:255;;;5948:2;5944:7;5932:9;5924:6;5920:22;5916:36;5911:3;5904:49;5976:40;6009:6;6000;5994:13;5976:40;:::i;:::-;5966:50;-1:-1:-1;6074:12:641;;;;6039:15;;;;5877:1;5870:9;5841:255;;;-1:-1:-1;6113:6:641;;5324:801;-1:-1:-1;;;;;;;5324:801:641:o;6419:693::-;6530:6;6538;6546;6554;6562;6570;6578;6631:3;6619:9;6610:7;6606:23;6602:33;6599:53;;;6648:1;6645;6638:12;6599:53;6671:29;6690:9;6671:29;:::i;:::-;6661:39;;6719:38;6753:2;6742:9;6738:18;6719:38;:::i;:::-;6709:48;;6804:2;6793:9;6789:18;6776:32;6766:42;;6855:2;6844:9;6840:18;6827:32;6817:42;;6909:3;6898:9;6894:19;6881:33;6954:4;6947:5;6943:16;6936:5;6933:27;6923:55;;6974:1;6971;6964:12;6923:55;6419:693;;;;-1:-1:-1;6419:693:641;;;;6997:5;7049:3;7034:19;;7021:33;;-1:-1:-1;7101:3:641;7086:19;;;7073:33;;6419:693;-1:-1:-1;;6419:693:641:o;7117:260::-;7185:6;7193;7246:2;7234:9;7225:7;7221:23;7217:32;7214:52;;;7262:1;7259;7252:12;7214:52;7285:29;7304:9;7285:29;:::i;:::-;7275:39;;7333:38;7367:2;7356:9;7352:18;7333:38;:::i;:::-;7323:48;;7117:260;;;;;:::o;7382:380::-;7461:1;7457:12;;;;7504;;;7525:61;;7579:4;7571:6;7567:17;7557:27;;7525:61;7632:2;7624:6;7621:14;7601:18;7598:38;7595:161;;;7678:10;7673:3;7669:20;7666:1;7659:31;7713:4;7710:1;7703:15;7741:4;7738:1;7731:15;7767:338;7969:2;7951:21;;;8008:2;7988:18;;;7981:30;-1:-1:-1;;;8042:2:641;8027:18;;8020:44;8096:2;8081:18;;7767:338::o;8110:127::-;8171:10;8166:3;8162:20;8159:1;8152:31;8202:4;8199:1;8192:15;8226:4;8223:1;8216:15;8242:128;8282:3;8313:1;8309:6;8306:1;8303:13;8300:39;;;8319:18;;:::i;:::-;-1:-1:-1;8355:9:641;;8242:128::o;8375:342::-;8577:2;8559:21;;;8616:2;8596:18;;;8589:30;-1:-1:-1;;;8650:2:641;8635:18;;8628:48;8708:2;8693:18;;8375:342::o;9074:344::-;9276:2;9258:21;;;9315:2;9295:18;;;9288:30;-1:-1:-1;;;9349:2:641;9334:18;;9327:50;9409:2;9394:18;;9074:344::o;9775:125::-;9815:4;9843:1;9840;9837:8;9834:34;;;9848:18;;:::i;:::-;-1:-1:-1;9885:9:641;;9775:125::o;9905:173::-;9973:20;;-1:-1:-1;;;;;10022:31:641;;10012:42;;10002:70;;10068:1;10065;10058:12;10083:936;10279:3;10264:19;;-1:-1:-1;;;;;10302:19:641;10352:26;10371:6;10352:26;:::i;:::-;10348:35;10337:9;10330:54;10465:2;10426:37;10457:4;10449:6;10445:17;10426:37;:::i;:::-;10422:46;10415:4;10404:9;10400:20;10393:76;10532:4;10524:6;10520:17;10507:31;10500:4;10489:9;10485:20;10478:61;10602:4;10594:6;10590:17;10577:31;10570:4;10559:9;10555:20;10548:61;10690:2;10651:37;10682:4;10674:6;10670:17;10651:37;:::i;:::-;10647:46;10640:4;10629:9;10625:20;10618:76;;10723:37;10754:4;10746:6;10742:17;10723:37;:::i;:::-;-1:-1:-1;;;;;10836:21:641;;;10829:4;10814:20;;10807:51;10779:19;10900:37;10931:4;10919:17;;10900:37;:::i;:::-;10896:46;10889:4;10878:9;10874:20;10867:76;;;11006:4;10998:6;10994:17;10981:31;10974:4;10963:9;10959:20;10952:61;10083:936;;;;:::o;11430:127::-;11491:10;11486:3;11482:20;11479:1;11472:31;11522:4;11519:1;11512:15;11546:4;11543:1;11536:15;11562:521;11639:4;11645:6;11705:11;11692:25;11799:2;11795:7;11784:8;11768:14;11764:29;11760:43;11740:18;11736:68;11726:96;;11818:1;11815;11808:12;11726:96;11845:33;;11897:20;;;-1:-1:-1;;;;;;11929:30:641;;11926:50;;;11972:1;11969;11962:12;11926:50;12005:4;11993:17;;-1:-1:-1;12036:14:641;12032:27;;;12022:38;;12019:58;;;12073:1;12070;12063:12;12088:135;12127:3;-1:-1:-1;;12148:17:641;;12145:43;;;12168:18;;:::i;:::-;-1:-1:-1;12215:1:641;12204:13;;12088:135::o;15924:489::-;16183:25;;;16239:2;16224:18;;16217:34;;;;16282:2;16267:18;;16260:34;;;;16325:2;16310:18;;16303:34;-1:-1:-1;;;;;16374:32:641;16368:3;16353:19;;16346:61;16170:3;16155:19;;15924:489::o;17927:186::-;17986:6;18039:2;18027:9;18018:7;18014:23;18010:32;18007:52;;;18055:1;18052;18045:12;18007:52;18078:29;18097:9;18078:29;:::i;20175:383::-;20372:2;20361:9;20354:21;20335:4;20398:45;20439:2;20428:9;20424:18;20416:6;20398:45;:::i;:::-;20491:9;20483:6;20479:22;20474:2;20463:9;20459:18;20452:50;20519:33;20545:6;20537;20519:33;:::i;:::-;20511:41;20175:383;-1:-1:-1;;;;;20175:383:641:o;20970:274::-;21099:3;21137:6;21131:13;21153:53;21199:6;21194:3;21187:4;21179:6;21175:17;21153:53;:::i;:::-;21222:16;;;;;20970:274;-1:-1:-1;;20970:274:641:o;22529:127::-;22590:10;22585:3;22581:20;22578:1;22571:31;22621:4;22618:1;22611:15;22645:4;22642:1;22635:15;25003:277;25070:6;25123:2;25111:9;25102:7;25098:23;25094:32;25091:52;;;25139:1;25136;25129:12;25091:52;25171:9;25165:16;25224:5;25217:13;25210:21;25203:5;25200:32;25190:60;;25246:1;25243;25236:12",
    "linkReferences": {},
    "immutableReferences": {
      "77437": [
        {
          "start": 1543,
          "length": 32
        }
      ],
      "77439": [
        {
          "start": 1501,
          "length": 32
        }
      ],
      "77441": [
        {
          "start": 1459,
          "length": 32
        }
      ],
      "77446": [
        {
          "start": 2959,
          "length": 32
        }
      ],
      "79909": [
        {
          "start": 7834,
          "length": 32
        }
      ],
      "79911": [
        {
          "start": 7792,
          "length": 32
        }
      ],
      "79913": [
        {
          "start": 7750,
          "length": 32
        }
      ],
      "79915": [
        {
          "start": 7906,
          "length": 32
        }
      ],
      "79917": [
        {
          "start": 7939,
          "length": 32
        }
      ],
      "79919": [
        {
          "start": 7873,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"`_account` should own the `_amount` of tokens.\",\"params\":{\"_account\":\"The account to burn tokens from.\",\"_amount\":\"The number of tokens to burn.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Lets an owner burn a given amount of an account's tokens.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"BASE:      ERC20      EXTENSION: SignatureMintERC20  The `ERC20SignatureMint` contract uses the `ERC20Base` contract, along with the `SignatureMintERC20` extension.  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC20SignatureMint.sol\":\"ERC20SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC20Base.sol\":{\"keccak256\":\"0xe66332288a570b311d65bd71447a7bb6227779607ce3cb3bf7e2d6a485365ddd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c3ea3930addce681895f7edb5a91f6a3d0691c2eece1e1be93c7497a16596d1\",\"dweb:/ipfs/QmaqfiXqJMnhjPcsjCoAvHCeTAAVppVxKfQHHyUvXZtsuc\"]},\"contracts/base/ERC20SignatureMint.sol\":{\"keccak256\":\"0x03b49cd1c0e33d120697d1480adec9d81b3cacfe3c9adc3283e1778128517da1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2ec997c20000bf58e85d035410b5dea99f275ccc440918b44462dec65f4aecd\",\"dweb:/ipfs/QmSnykfWShTx6GYqwCNCBaWts2p7rLxnE1w3KfXw4mazWD\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/SignatureMintERC20.sol\":{\"keccak256\":\"0x15e312ccc565f34739216fda8af1f57a654b59997eaf367ed3554c97004eaf02\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52e663f7bb17d7f10196931c911f3aa72ecebf9d8b3d1dcc264c391cf27e6ddd\",\"dweb:/ipfs/Qmd9oJvZvbUE86TpxVUndYswzw79efmdLBypFbMhk8aKoW\"]},\"contracts/extension/interface/IBurnableERC20.sol\":{\"keccak256\":\"0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe\",\"dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMintableERC20.sol\":{\"keccak256\":\"0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4\",\"dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5\",\"dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0429da8e9a940fceb58b83ea0425489dccf4f0c2178625dac6864c889c96f43f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1519284bd9276de5bb35f3fea2068e718518e179091ca494652b0fddfa1ea940\",\"dweb:/ipfs/QmTbZkyEFbgTLA8ehLgs29JLGaqrGdUNJQxagN8dFiiSma\"]},\"contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x409682c602fff6428b40be9c454a3dca04e3c891a9dec03ad923da083b336312\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692a8d672cf6a5c87d4ff10520e7f440496fa3896fe4b3f0bd15a5af6155e032\",\"dweb:/ipfs/QmXnzi7Y3rP8wfRy71j5BsRPZAAmbQ2SMGcQdEdt4N7fYT\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/openzeppelin-presets/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8\",\"dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN\"]},\"contracts/openzeppelin-presets/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "`_account` should own the `_amount` of tokens.",
            "params": {
              "_account": "The account to burn tokens from.",
              "_amount": "The number of tokens to burn."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "burnFrom(address,uint256)": {
            "notice": "Lets an owner burn a given amount of an account's tokens."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC20SignatureMint.sol": "ERC20SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC20Base.sol": {
        "keccak256": "0xe66332288a570b311d65bd71447a7bb6227779607ce3cb3bf7e2d6a485365ddd",
        "urls": [
          "bzz-raw://2c3ea3930addce681895f7edb5a91f6a3d0691c2eece1e1be93c7497a16596d1",
          "dweb:/ipfs/QmaqfiXqJMnhjPcsjCoAvHCeTAAVppVxKfQHHyUvXZtsuc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20SignatureMint.sol": {
        "keccak256": "0x03b49cd1c0e33d120697d1480adec9d81b3cacfe3c9adc3283e1778128517da1",
        "urls": [
          "bzz-raw://f2ec997c20000bf58e85d035410b5dea99f275ccc440918b44462dec65f4aecd",
          "dweb:/ipfs/QmSnykfWShTx6GYqwCNCBaWts2p7rLxnE1w3KfXw4mazWD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20.sol": {
        "keccak256": "0x15e312ccc565f34739216fda8af1f57a654b59997eaf367ed3554c97004eaf02",
        "urls": [
          "bzz-raw://52e663f7bb17d7f10196931c911f3aa72ecebf9d8b3d1dcc264c391cf27e6ddd",
          "dweb:/ipfs/Qmd9oJvZvbUE86TpxVUndYswzw79efmdLBypFbMhk8aKoW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IBurnableERC20.sol": {
        "keccak256": "0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272",
        "urls": [
          "bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe",
          "dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMintableERC20.sol": {
        "keccak256": "0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e",
        "urls": [
          "bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4",
          "dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15",
        "urls": [
          "bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5",
          "dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/token/ERC20/ERC20.sol": {
        "keccak256": "0x0429da8e9a940fceb58b83ea0425489dccf4f0c2178625dac6864c889c96f43f",
        "urls": [
          "bzz-raw://1519284bd9276de5bb35f3fea2068e718518e179091ca494652b0fddfa1ea940",
          "dweb:/ipfs/QmTbZkyEFbgTLA8ehLgs29JLGaqrGdUNJQxagN8dFiiSma"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x409682c602fff6428b40be9c454a3dca04e3c891a9dec03ad923da083b336312",
        "urls": [
          "bzz-raw://692a8d672cf6a5c87d4ff10520e7f440496fa3896fe4b3f0bd15a5af6155e032",
          "dweb:/ipfs/QmXnzi7Y3rP8wfRy71j5BsRPZAAmbQ2SMGcQdEdt4N7fYT"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e",
        "urls": [
          "bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8",
          "dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC20SignatureMint.sol",
    "id": 10033,
    "exportedSymbols": {
      "Context": [
        78641
      ],
      "ContractMetadata": [
        34723
      ],
      "Counters": [
        78715
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "ECDSA": [
        79903
      ],
      "EIP712": [
        80057
      ],
      "ERC20": [
        77414
      ],
      "ERC20Base": [
        9265
      ],
      "ERC20Permit": [
        77656
      ],
      "ERC20SignatureMint": [
        10032
      ],
      "IBurnableERC20": [
        49496
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC20": [
        31216
      ],
      "IERC20Metadata": [
        31235
      ],
      "IERC20Permit": [
        31271
      ],
      "IMintableERC20": [
        50131
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPrimarySale": [
        50580
      ],
      "IWETH": [
        55699
      ],
      "Multicall": [
        37872
      ],
      "Ownable": [
        38400
      ],
      "PrimarySale": [
        39318
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureMintERC20": [
        40742
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3777:25",
    "nodes": [
      {
        "id": 9845,
        "nodeType": "PragmaDirective",
        "src": "39:23:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 9846,
        "nodeType": "ImportDirective",
        "src": "86:25:25",
        "nodes": [],
        "absolutePath": "contracts/base/ERC20Base.sol",
        "file": "./ERC20Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10033,
        "sourceUnit": 9266,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9847,
        "nodeType": "ImportDirective",
        "src": "113:38:25",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10033,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9849,
        "nodeType": "ImportDirective",
        "src": "152:73:25",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20.sol",
        "file": "../extension/SignatureMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10033,
        "sourceUnit": 40743,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9848,
              "name": "SignatureMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40742,
              "src": "161:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_SignatureMintERC20_$40742_$",
                "typeString": "type(contract SignatureMintERC20)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9850,
        "nodeType": "ImportDirective",
        "src": "227:40:25",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10033,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10032,
        "nodeType": "ContractDefinition",
        "src": "846:2969:25",
        "nodes": [
          {
            "id": 9878,
            "nodeType": "FunctionDefinition",
            "src": "1105:255:25",
            "nodes": [],
            "body": {
              "id": 9877,
              "nodeType": "Block",
              "src": "1294:66:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9874,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9865,
                        "src": "1331:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9873,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "1304:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1304:49:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9876,
                  "nodeType": "ExpressionStatement",
                  "src": "1304:49:25"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9868,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9859,
                    "src": "1263:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9869,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9861,
                    "src": "1278:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 9870,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9863,
                    "src": "1285:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9871,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9867,
                  "name": "ERC20Base",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9265,
                  "src": "1253:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:40:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9859,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1134:13:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9878,
                  "src": "1126:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9861,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1171:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9878,
                  "src": "1157:19:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9860,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9863,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1200:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9878,
                  "src": "1186:21:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9865,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1225:21:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9878,
                  "src": "1217:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1116:136:25"
            },
            "returnParameters": {
              "id": 9872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1294:0:25"
            },
            "scope": 10032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9931,
            "nodeType": "FunctionDefinition",
            "src": "1798:603:25",
            "nodes": [],
            "body": {
              "id": 9930,
              "nodeType": "Block",
              "src": "1965:436:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9890,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9882,
                            "src": "1983:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                              "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                            }
                          },
                          "id": 9891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51029,
                          "src": "1983:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1999:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1983:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 9894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2002:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 9889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1975:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9896,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:50:25"
                },
                {
                  "expression": {
                    "id": 9902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9897,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9887,
                      "src": "2075:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9899,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9882,
                          "src": "2100:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 9900,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9884,
                          "src": "2106:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 9898,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40687,
                        "src": "2084:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$51040_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 9901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2084:33:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2075:42:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9903,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:42:25"
                },
                {
                  "assignments": [
                    9905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9905,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2136:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 9930,
                      "src": "2128:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9904,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2128:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9908,
                  "initialValue": {
                    "expression": {
                      "id": 9906,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9882,
                      "src": "2147:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                        "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                      }
                    },
                    "id": 9907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51025,
                    "src": "2147:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2128:26:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9910,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9882,
                          "src": "2211:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 9911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51027,
                        "src": "2211:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9912,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9882,
                          "src": "2238:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 9913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51033,
                        "src": "2238:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9914,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9882,
                          "src": "2253:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 9915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51031,
                        "src": "2253:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9909,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "2190:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:74:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9917,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:74:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9919,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "2305:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9920,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9882,
                          "src": "2315:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 9921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51029,
                        "src": "2315:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9918,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77231,
                      "src": "2299:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9923,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:30:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9925,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9887,
                        "src": "2371:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9926,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "2379:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9927,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9882,
                        "src": "2389:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 9924,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51050,
                      "src": "2345:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$51040_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 9928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:49:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9929,
                  "nodeType": "EmitStatement",
                  "src": "2340:54:25"
                }
              ]
            },
            "baseFunctions": [
              51074
            ],
            "documentation": {
              "id": 9879,
              "nodeType": "StructuredDocumentation",
              "src": "1553:240:25",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1807:17:25",
            "parameters": {
              "id": 9885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9882,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1846:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1825:25:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 9881,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9880,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51040,
                      "src": "1825:11:25"
                    },
                    "referencedDeclaration": 51040,
                    "src": "1825:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$51040_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9884,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1867:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1852:25:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9883,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:54:25"
            },
            "returnParameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9887,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1953:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1945:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:16:25"
            },
            "scope": 10032,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 9946,
            "nodeType": "FunctionDefinition",
            "src": "2675:134:25",
            "nodes": [],
            "body": {
              "id": 9945,
              "nodeType": "Block",
              "src": "2767:42:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9940,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9934,
                      "src": "2784:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9941,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "2795:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2795:7:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2784:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9939,
                  "id": 9944,
                  "nodeType": "Return",
                  "src": "2777:25:25"
                }
              ]
            },
            "baseFunctions": [
              40617
            ],
            "documentation": {
              "id": 9932,
              "nodeType": "StructuredDocumentation",
              "src": "2593:77:25",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "2684:19:25",
            "overrides": {
              "id": 9936,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2743:8:25"
            },
            "parameters": {
              "id": 9935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9934,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "2712:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9946,
                  "src": "2704:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2703:17:25"
            },
            "returnParameters": {
              "id": 9939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9938,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9946,
                  "src": "2761:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9937,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:6:25"
            },
            "scope": 10032,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 9960,
            "nodeType": "FunctionDefinition",
            "src": "2910:130:25",
            "nodes": [],
            "body": {
              "id": 9959,
              "nodeType": "Block",
              "src": "2995:45:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9953,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3012:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3012:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9955,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3026:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3026:7:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3012:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9952,
                  "id": 9958,
                  "nodeType": "Return",
                  "src": "3005:28:25"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 9947,
              "nodeType": "StructuredDocumentation",
              "src": "2815:90:25",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "2919:27:25",
            "overrides": {
              "id": 9949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2971:8:25"
            },
            "parameters": {
              "id": 9948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2946:2:25"
            },
            "returnParameters": {
              "id": 9952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9951,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9960,
                  "src": "2989:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9950,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2989:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2988:6:25"
            },
            "scope": 10032,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10031,
            "nodeType": "FunctionDefinition",
            "src": "3132:681:25",
            "nodes": [],
            "body": {
              "id": 10030,
              "nodeType": "Block",
              "src": "3275:538:25",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9970,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9967,
                      "src": "3289:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3299:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3289:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9983,
                  "nodeType": "IfStatement",
                  "src": "3285:95:25",
                  "trueBody": {
                    "id": 9982,
                    "nodeType": "Block",
                    "src": "3302:78:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9974,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3324:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3324:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 9976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3337:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3324:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 9978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3340:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 9973,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3316:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3316:33:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9980,
                        "nodeType": "ExpressionStatement",
                        "src": "3316:33:25"
                      },
                      {
                        "functionReturnParameters": 9969,
                        "id": 9981,
                        "nodeType": "Return",
                        "src": "3363:7:25"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9984,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9965,
                      "src": "3394:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 9985,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "3407:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 9986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "3407:32:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3394:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10005,
                    "nodeType": "Block",
                    "src": "3526:70:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9998,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3548:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3548:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 10000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3561:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3548:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672076616c7565206e6f74207a65726f",
                              "id": 10002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3564:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              },
                              "value": "msg value not zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              }
                            ],
                            "id": 9997,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3540:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3540:45:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10004,
                        "nodeType": "ExpressionStatement",
                        "src": "3540:45:25"
                      }
                    ]
                  },
                  "id": 10006,
                  "nodeType": "IfStatement",
                  "src": "3390:206:25",
                  "trueBody": {
                    "id": 9996,
                    "nodeType": "Block",
                    "src": "3441:79:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9989,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3463:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3463:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 9991,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9967,
                                "src": "3476:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3463:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e6420746f74616c2070726963652e",
                              "id": 9993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3484:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              },
                              "value": "Must send total price."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              }
                            ],
                            "id": 9988,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3455:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3455:54:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9995,
                        "nodeType": "ExpressionStatement",
                        "src": "3455:54:25"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10008,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "3614:13:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 10030,
                      "src": "3606:21:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3606:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10019,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 10014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10009,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9963,
                        "src": "3630:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3663:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3655:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10010,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3655:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3655:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3630:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 10017,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9963,
                      "src": "3693:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3630:84:25",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10015,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "3668:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3668:22:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3606:108:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10023,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9965,
                        "src": "3761:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10024,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3772:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3772:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10026,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10008,
                        "src": "3784:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10027,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9967,
                        "src": "3799:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10020,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "3724:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 10022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "3724:36:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 10028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:82:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10029,
                  "nodeType": "ExpressionStatement",
                  "src": "3724:82:25"
                }
              ]
            },
            "documentation": {
              "id": 9961,
              "nodeType": "StructuredDocumentation",
              "src": "3046:81:25",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3141:20:25",
            "parameters": {
              "id": 9968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9963,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3179:21:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10031,
                  "src": "3171:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9965,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3218:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10031,
                  "src": "3210:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9967,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3245:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10031,
                  "src": "3237:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3161:96:25"
            },
            "returnParameters": {
              "id": 9969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:0:25"
            },
            "scope": 10032,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9852,
              "name": "ERC20Base",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9265,
              "src": "877:9:25"
            },
            "id": 9853,
            "nodeType": "InheritanceSpecifier",
            "src": "877:9:25"
          },
          {
            "baseName": {
              "id": 9854,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "888:11:25"
            },
            "id": 9855,
            "nodeType": "InheritanceSpecifier",
            "src": "888:11:25"
          },
          {
            "baseName": {
              "id": 9856,
              "name": "SignatureMintERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40742,
              "src": "901:18:25"
            },
            "id": 9857,
            "nodeType": "InheritanceSpecifier",
            "src": "901:18:25"
          }
        ],
        "canonicalName": "ERC20SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9851,
          "nodeType": "StructuredDocumentation",
          "src": "269:575:25",
          "text": "      BASE:      ERC20\n      EXTENSION: SignatureMintERC20\n  The `ERC20SignatureMint` contract uses the `ERC20Base` contract, along with the `SignatureMintERC20` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10032,
          40742,
          51075,
          80057,
          39318,
          50580,
          9265,
          49496,
          50131,
          77656,
          31271,
          77414,
          31235,
          31216,
          78641,
          38400,
          50418,
          37872,
          50168,
          34723,
          49679
        ],
        "name": "ERC20SignatureMint",
        "nameLocation": "855:18:25",
        "scope": 10033,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 25
}