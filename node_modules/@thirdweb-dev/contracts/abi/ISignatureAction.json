{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureAction.GenericRequest",
          "name": "_req",
          "type": "tuple"
        }
      ],
      "name": "RequestExecuted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISignatureAction.GenericRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "verify((uint128,uint128,bytes32,bytes),bytes)": "c4376dd7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ISignatureAction.GenericRequest\",\"name\":\"_req\",\"type\":\"tuple\"}],\"name\":\"RequestExecuted\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISignatureAction.GenericRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verify((uint128,uint128,bytes32,bytes),bytes)\":{\"params\":{\"req\":\"The payload signed by the authorized wallet.\",\"signature\":\"The signature produced by the authorized wallet signing the given payload.\"},\"returns\":{\"signer\":\"The address of the signer.\",\"success\":\"Whether the payload is signed by the authorized wallet.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"RequestExecuted(address,address,(uint128,uint128,bytes32,bytes))\":{\"notice\":\"Emitted when a payload is verified and executed.\"}},\"kind\":\"user\",\"methods\":{\"verify((uint128,uint128,bytes32,bytes),bytes)\":{\"notice\":\"Verfies that a payload is signed by an authorized wallet.\"}},\"notice\":\"thirdweb's `SignatureAction` extension smart contract can be used with any base smart contract. It provides a generic  payload struct that can be signed by an authorized wallet and verified by the contract. The bytes `data` field provided  in the payload can be abi encoded <-> decoded to use `SignatureContract` for any authorized signature action.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/ISignatureAction.sol\":\"ISignatureAction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/ISignatureAction.sol\":{\"keccak256\":\"0x350c50420ab3b3a6da2d1785d722e83839b8ca01835feb718a4a5290d2704cc2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bf16c71c962825e9dc20c77bec53fbbe6e8872fbf99c745faef82d02a92fdbdb\",\"dweb:/ipfs/QmS6Ceppbn5stdQEHxwfDQt5Vdvxh94oGVFfpYyhUxwTRt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureAction.GenericRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RequestExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureAction.GenericRequest",
              "name": "req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "verify((uint128,uint128,bytes32,bytes),bytes)": {
            "params": {
              "req": "The payload signed by the authorized wallet.",
              "signature": "The signature produced by the authorized wallet signing the given payload."
            },
            "returns": {
              "signer": "The address of the signer.",
              "success": "Whether the payload is signed by the authorized wallet."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "verify((uint128,uint128,bytes32,bytes),bytes)": {
            "notice": "Verfies that a payload is signed by an authorized wallet."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/interface/ISignatureAction.sol": "ISignatureAction"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/ISignatureAction.sol": {
        "keccak256": "0x350c50420ab3b3a6da2d1785d722e83839b8ca01835feb718a4a5290d2704cc2",
        "urls": [
          "bzz-raw://bf16c71c962825e9dc20c77bec53fbbe6e8872fbf99c745faef82d02a92fdbdb",
          "dweb:/ipfs/QmS6Ceppbn5stdQEHxwfDQt5Vdvxh94oGVFfpYyhUxwTRt"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/interface/ISignatureAction.sol",
    "id": 50956,
    "exportedSymbols": {
      "ISignatureAction": [
        50955
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1762:199",
    "nodes": [
      {
        "id": 50921,
        "nodeType": "PragmaDirective",
        "src": "39:23:199",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 50955,
        "nodeType": "ContractDefinition",
        "src": "455:1345:199",
        "nodes": [
          {
            "id": 50931,
            "nodeType": "StructDefinition",
            "src": "938:148:199",
            "nodes": [],
            "canonicalName": "ISignatureAction.GenericRequest",
            "members": [
              {
                "constant": false,
                "id": 50924,
                "mutability": "mutable",
                "name": "validityStartTimestamp",
                "nameLocation": "978:22:199",
                "nodeType": "VariableDeclaration",
                "scope": 50931,
                "src": "970:30:199",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 50923,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "970:7:199",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50926,
                "mutability": "mutable",
                "name": "validityEndTimestamp",
                "nameLocation": "1018:20:199",
                "nodeType": "VariableDeclaration",
                "scope": 50931,
                "src": "1010:28:199",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 50925,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:7:199",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50928,
                "mutability": "mutable",
                "name": "uid",
                "nameLocation": "1056:3:199",
                "nodeType": "VariableDeclaration",
                "scope": 50931,
                "src": "1048:11:199",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 50927,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1048:7:199",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50930,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1075:4:199",
                "nodeType": "VariableDeclaration",
                "scope": 50931,
                "src": "1069:10:199",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 50929,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1069:5:199",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "GenericRequest",
            "nameLocation": "945:14:199",
            "scope": 50955,
            "visibility": "public"
          },
          {
            "id": 50941,
            "nodeType": "EventDefinition",
            "src": "1157:89:199",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50932,
              "nodeType": "StructuredDocumentation",
              "src": "1092:60:199",
              "text": "@notice Emitted when a payload is verified and executed."
            },
            "name": "RequestExecuted",
            "nameLocation": "1163:15:199",
            "parameters": {
              "id": 50940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50934,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1195:4:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50941,
                  "src": "1179:20:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50936,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1217:6:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50941,
                  "src": "1201:22:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50939,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1240:4:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50941,
                  "src": "1225:19:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GenericRequest_$50931_memory_ptr",
                    "typeString": "struct ISignatureAction.GenericRequest"
                  },
                  "typeName": {
                    "id": 50938,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50937,
                      "name": "GenericRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50931,
                      "src": "1225:14:199"
                    },
                    "referencedDeclaration": 50931,
                    "src": "1225:14:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GenericRequest_$50931_storage_ptr",
                      "typeString": "struct ISignatureAction.GenericRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:67:199"
            }
          },
          {
            "id": 50954,
            "nodeType": "FunctionDefinition",
            "src": "1650:148:199",
            "nodes": [],
            "documentation": {
              "id": 50942,
              "nodeType": "StructuredDocumentation",
              "src": "1252:393:199",
              "text": "  @notice Verfies that a payload is signed by an authorized wallet.\n  @param req The payload signed by the authorized wallet.\n  @param signature The signature produced by the authorized wallet signing the given payload.\n  @return success Whether the payload is signed by the authorized wallet.\n  @return signer The address of the signer."
            },
            "functionSelector": "c4376dd7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "1659:6:199",
            "parameters": {
              "id": 50948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50945,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "1690:3:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50954,
                  "src": "1666:27:199",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GenericRequest_$50931_calldata_ptr",
                    "typeString": "struct ISignatureAction.GenericRequest"
                  },
                  "typeName": {
                    "id": 50944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50943,
                      "name": "GenericRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50931,
                      "src": "1666:14:199"
                    },
                    "referencedDeclaration": 50931,
                    "src": "1666:14:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GenericRequest_$50931_storage_ptr",
                      "typeString": "struct ISignatureAction.GenericRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50947,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1710:9:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50954,
                  "src": "1695:24:199",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:55:199"
            },
            "returnParameters": {
              "id": 50953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50950,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1773:7:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50954,
                  "src": "1768:12:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:4:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50952,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1790:6:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 50954,
                  "src": "1782:14:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:30:199"
            },
            "scope": 50955,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISignatureAction",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 50922,
          "nodeType": "StructuredDocumentation",
          "src": "86:367:199",
          "text": "  thirdweb's `SignatureAction` extension smart contract can be used with any base smart contract. It provides a generic\n  payload struct that can be signed by an authorized wallet and verified by the contract. The bytes `data` field provided\n  in the payload can be abi encoded <-> decoded to use `SignatureContract` for any authorized signature action."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          50955
        ],
        "name": "ISignatureAction",
        "nameLocation": "465:16:199",
        "scope": 50956,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 199
}