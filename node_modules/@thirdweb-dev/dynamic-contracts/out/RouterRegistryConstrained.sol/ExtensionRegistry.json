{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_extension",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isRegistered",
          "type": "bool"
        }
      ],
      "name": "setExtensionRegistered",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b503360805260805161024f610035600039600081816098015260dd015261024f6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636beaa2e614610046578063c3c5a5471461005b578063f851a44014610093575b600080fd5b6100596100543660046101bb565b6100d2565b005b61007e6100693660046101f7565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ba7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101745760405162461bcd60e51b815260206004820152603a60248201527f457874656e73696f6e52656769737472793a204f6e6c792061646d696e20636160448201527f6e20616c74657220657874656e73696f6e207265676973747279000000000000606482015260840160405180910390fd5b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b80356001600160a01b03811681146101b657600080fd5b919050565b600080604083850312156101ce57600080fd5b6101d78361019f565b9150602083013580151581146101ec57600080fd5b809150509250929050565b60006020828403121561020957600080fd5b6102128261019f565b939250505056fea2646970667358221220388e56ced6082fd85e03381cb182277aa303803c0194872f23e1e706264c536364736f6c63430008100033",
    "sourceMap": "259:417:10:-:0;;;381:49;;;;;;;;;-1:-1:-1;413:10:10;405:18;;259:417;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80636beaa2e614610046578063c3c5a5471461005b578063f851a44014610093575b600080fd5b6100596100543660046101bb565b6100d2565b005b61007e6100693660046101f7565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ba7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101745760405162461bcd60e51b815260206004820152603a60248201527f457874656e73696f6e52656769737472793a204f6e6c792061646d696e20636160448201527f6e20616c74657220657874656e73696f6e207265676973747279000000000000606482015260840160405180910390fd5b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b80356001600160a01b03811681146101b657600080fd5b919050565b600080604083850312156101ce57600080fd5b6101d78361019f565b9150602083013580151581146101ec57600080fd5b809150509250929050565b60006020828403121561020957600080fd5b6102128261019f565b939250505056fea2646970667358221220388e56ced6082fd85e03381cb182277aa303803c0194872f23e1e706264c536364736f6c63430008100033",
    "sourceMap": "259:417:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:238;;;;;;:::i;:::-;;:::i;:::-;;329:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;900:14:15;;893:22;875:41;;863:2;848:18;329:45:10;;;;;;;;293:30;;;;;;;;-1:-1:-1;;;;;1091:32:15;;;1073:51;;1061:2;1046:18;293:30:10;927:203:15;436:238:10;535:10;-1:-1:-1;;;;;549:5:10;535:19;;527:90;;;;-1:-1:-1;;;527:90:10;;1337:2:15;527:90:10;;;1319:21:15;1376:2;1356:18;;;1349:30;1415:34;1395:18;;;1388:62;1486:28;1466:18;;;1459:56;1532:19;;527:90:10;;;;;;;;-1:-1:-1;;;;;627:24:10;;;;:12;:24;;;;;;;;;;:40;;-1:-1:-1;;627:40:10;;;;;;;;;;436:238::o;14:173:15:-;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:347::-;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;357:29;376:9;357:29;:::i;:::-;347:39;;436:2;425:9;421:18;408:32;483:5;476:13;469:21;462:5;459:32;449:60;;505:1;502;495:12;449:60;528:5;518:15;;;192:347;;;;;:::o;544:186::-;603:6;656:2;644:9;635:7;631:23;627:32;624:52;;;672:1;669;662:12;624:52;695:29;714:9;695:29;:::i;:::-;685:39;544:186;-1:-1:-1;;;544:186:15:o",
    "linkReferences": {},
    "immutableReferences": {
      "982": [
        {
          "start": 152,
          "length": 32
        },
        {
          "start": 221,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "isRegistered(address)": "c3c5a547",
    "setExtensionRegistered(address,bool)": "6beaa2e6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_extension\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isRegistered\",\"type\":\"bool\"}],\"name\":\"setExtensionRegistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This smart contract is an EXAMPLE, and is not meant for use in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/presets/example/RouterRegistryConstrained.sol\":\"ExtensionRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/core/Router.sol\":{\"keccak256\":\"0x3866f6d3742b5e10c68fc874609fc3d86de748616b9b79ac1fee0c6266050f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://288898df19d6214186c582a4622547887a38aa0502e11c058bafedef5db1218c\",\"dweb:/ipfs/QmNiw3MoU12Er8QWt4JmaecHU9i5RuE6SWvX4K8ffQyscL\"]},\"src/eip/ERC165.sol\":{\"keccak256\":\"0xca3427246a2713370eed257b0a48aa701f229b140e19a4c93357f4bfe78c0f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eeccd57e52d33e22b7acbca968af469bd0a474ea549a42d3620c171db73a888\",\"dweb:/ipfs/QmQVsz53hToij9oR6qWHdxUfFo3S2fSLsUXHhxK9HxmFXy\"]},\"src/eip/interface/IERC165.sol\":{\"keccak256\":\"0x4598bd1b9e8ef33c2d3b358f0366f77e489eadfee44275f79f239c99c5b0ad39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://601e7845464981d3fa81e04e4da3ab0a3dbfb12da744da171a62bb8e6500c9f4\",\"dweb:/ipfs/QmYiMEgyH5o1Bopo2TjmADzgrjQdeKVMKcmcCeUmAGnGhP\"]},\"src/interface/IBaseRouter.sol\":{\"keccak256\":\"0xb72a6553f361698e759100b2dc646652f009b93a8d6020711d75322c137a0178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d3523d3a98b7df0791139300b72b57fc88a18fec5443b47fcc6caf4cbbf7b77\",\"dweb:/ipfs/QmNUqk2fx9dcSBccvN55D8e86LgC57NqJmKUtwPMDvpERW\"]},\"src/interface/IDefaultExtensionSet.sol\":{\"keccak256\":\"0xb218924bec5746dfedbe8b928dea84d5a6da5cf55c1473861646669d4573768e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://305e00f27b8f303dea6520dd096c4703374578e5f17801535f18a4837ff2df07\",\"dweb:/ipfs/QmUuJAVdBuFWnpwz7Mpw6DKTw7UrSZDgd1WkdxpuAp5n2j\"]},\"src/interface/IExtension.sol\":{\"keccak256\":\"0xdf5308d6fee2bb35751a838ee2d08b80f867ea64c054ccaa1516db1b30e041a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a01a9c94419c053242874cf474cfac228d9526c33b99f7ba86865720648cb19d\",\"dweb:/ipfs/QmXkofoBTdCWXiaSyoUq2rM2RZdP7iXdZMUi7eoGY3GKbb\"]},\"src/interface/IRouter.sol\":{\"keccak256\":\"0x2162a7da64c61d7211dbd9c6c40c021afeacf51bf70b4eb15bfd794bb2950d9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b72ded4c6099ec784cb68b8558605bc88e782a5f3d691d850c0c227b77034ae\",\"dweb:/ipfs/QmTusHWpZA4GfTcptZdvAsTGLTyEQ18snRwheJSoCJwHBk\"]},\"src/presets/BaseRouterWithDefaults.sol\":{\"keccak256\":\"0x20afede177bf6316cb6fce5abc54d64902c95d57d130d814fd362a0891e82223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6af993895f40aad2064af0ffcde8485a7ddacbe97ffba13826fe56ad61c5777d\",\"dweb:/ipfs/QmTVygyjmGt1yAsHrLScw27MhkxNsBZCKFM1MM9cSd3LzY\"]},\"src/presets/example/RouterRegistryConstrained.sol\":{\"keccak256\":\"0x81869300e7373acb59e2993bda0a306da4d4b44dc7d6096a1276b239bc606c7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8834dc8f406ee195486ce96e720635322b2c71abaef4a160f0a21535fd0c6a1a\",\"dweb:/ipfs/Qmajc5HQ2W4kXDTCfUiysjtAZVeweaJ2JGGdREeaVryauG\"]},\"src/presets/utils/DefaultExtensionSet.sol\":{\"keccak256\":\"0x15c21321c14bb6cc28a2a85e0f3924a768368143702ad4dbb302db7faf0d9bb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367e01584afe56947d69ce34480399d9aabea6b4fb5e58231143dd057982552\",\"dweb:/ipfs/QmenefGZMa2xLP5saytLGC85Bqe9k7Mtj8CJuvvyGKyLoT\"]},\"src/presets/utils/ExtensionState.sol\":{\"keccak256\":\"0x5e4cfe7df948c52d5bdee76bc7c51ed5df46b9e839a231534a175d6355a1a11a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1cb710651bb96b48d34df70c588480492776d49078ff0423dd4618ba32196\",\"dweb:/ipfs/QmVnagPwWwScVQjYW5u76jnNwXrLjddJoVuvmiZqeEsCAK\"]},\"src/presets/utils/StringSet.sol\":{\"keccak256\":\"0xa84cb2e3161b105e73d5e9da9a8d8d34d48daf3e2809765193b10e7a520eaeca\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://0bb4e41fbe504641cbcf79799b4124571bb6ea19a5c719f65e26085eb0ee44eb\",\"dweb:/ipfs/QmTPpMS2qS5XVgLaJohSBm7ugQ6m3LMAewPjnHazWaAAfi\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_extension",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isRegistered",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExtensionRegistered"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/presets/example/RouterRegistryConstrained.sol": "ExtensionRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "src/core/Router.sol": {
        "keccak256": "0x3866f6d3742b5e10c68fc874609fc3d86de748616b9b79ac1fee0c6266050f46",
        "urls": [
          "bzz-raw://288898df19d6214186c582a4622547887a38aa0502e11c058bafedef5db1218c",
          "dweb:/ipfs/QmNiw3MoU12Er8QWt4JmaecHU9i5RuE6SWvX4K8ffQyscL"
        ],
        "license": "MIT"
      },
      "src/eip/ERC165.sol": {
        "keccak256": "0xca3427246a2713370eed257b0a48aa701f229b140e19a4c93357f4bfe78c0f5b",
        "urls": [
          "bzz-raw://6eeccd57e52d33e22b7acbca968af469bd0a474ea549a42d3620c171db73a888",
          "dweb:/ipfs/QmQVsz53hToij9oR6qWHdxUfFo3S2fSLsUXHhxK9HxmFXy"
        ],
        "license": "MIT"
      },
      "src/eip/interface/IERC165.sol": {
        "keccak256": "0x4598bd1b9e8ef33c2d3b358f0366f77e489eadfee44275f79f239c99c5b0ad39",
        "urls": [
          "bzz-raw://601e7845464981d3fa81e04e4da3ab0a3dbfb12da744da171a62bb8e6500c9f4",
          "dweb:/ipfs/QmYiMEgyH5o1Bopo2TjmADzgrjQdeKVMKcmcCeUmAGnGhP"
        ],
        "license": "MIT"
      },
      "src/interface/IBaseRouter.sol": {
        "keccak256": "0xb72a6553f361698e759100b2dc646652f009b93a8d6020711d75322c137a0178",
        "urls": [
          "bzz-raw://9d3523d3a98b7df0791139300b72b57fc88a18fec5443b47fcc6caf4cbbf7b77",
          "dweb:/ipfs/QmNUqk2fx9dcSBccvN55D8e86LgC57NqJmKUtwPMDvpERW"
        ],
        "license": "MIT"
      },
      "src/interface/IDefaultExtensionSet.sol": {
        "keccak256": "0xb218924bec5746dfedbe8b928dea84d5a6da5cf55c1473861646669d4573768e",
        "urls": [
          "bzz-raw://305e00f27b8f303dea6520dd096c4703374578e5f17801535f18a4837ff2df07",
          "dweb:/ipfs/QmUuJAVdBuFWnpwz7Mpw6DKTw7UrSZDgd1WkdxpuAp5n2j"
        ],
        "license": "MIT"
      },
      "src/interface/IExtension.sol": {
        "keccak256": "0xdf5308d6fee2bb35751a838ee2d08b80f867ea64c054ccaa1516db1b30e041a7",
        "urls": [
          "bzz-raw://a01a9c94419c053242874cf474cfac228d9526c33b99f7ba86865720648cb19d",
          "dweb:/ipfs/QmXkofoBTdCWXiaSyoUq2rM2RZdP7iXdZMUi7eoGY3GKbb"
        ],
        "license": "MIT"
      },
      "src/interface/IRouter.sol": {
        "keccak256": "0x2162a7da64c61d7211dbd9c6c40c021afeacf51bf70b4eb15bfd794bb2950d9e",
        "urls": [
          "bzz-raw://7b72ded4c6099ec784cb68b8558605bc88e782a5f3d691d850c0c227b77034ae",
          "dweb:/ipfs/QmTusHWpZA4GfTcptZdvAsTGLTyEQ18snRwheJSoCJwHBk"
        ],
        "license": "MIT"
      },
      "src/presets/BaseRouterWithDefaults.sol": {
        "keccak256": "0x20afede177bf6316cb6fce5abc54d64902c95d57d130d814fd362a0891e82223",
        "urls": [
          "bzz-raw://6af993895f40aad2064af0ffcde8485a7ddacbe97ffba13826fe56ad61c5777d",
          "dweb:/ipfs/QmTVygyjmGt1yAsHrLScw27MhkxNsBZCKFM1MM9cSd3LzY"
        ],
        "license": "MIT"
      },
      "src/presets/example/RouterRegistryConstrained.sol": {
        "keccak256": "0x81869300e7373acb59e2993bda0a306da4d4b44dc7d6096a1276b239bc606c7a",
        "urls": [
          "bzz-raw://8834dc8f406ee195486ce96e720635322b2c71abaef4a160f0a21535fd0c6a1a",
          "dweb:/ipfs/Qmajc5HQ2W4kXDTCfUiysjtAZVeweaJ2JGGdREeaVryauG"
        ],
        "license": "MIT"
      },
      "src/presets/utils/DefaultExtensionSet.sol": {
        "keccak256": "0x15c21321c14bb6cc28a2a85e0f3924a768368143702ad4dbb302db7faf0d9bb1",
        "urls": [
          "bzz-raw://d367e01584afe56947d69ce34480399d9aabea6b4fb5e58231143dd057982552",
          "dweb:/ipfs/QmenefGZMa2xLP5saytLGC85Bqe9k7Mtj8CJuvvyGKyLoT"
        ],
        "license": "MIT"
      },
      "src/presets/utils/ExtensionState.sol": {
        "keccak256": "0x5e4cfe7df948c52d5bdee76bc7c51ed5df46b9e839a231534a175d6355a1a11a",
        "urls": [
          "bzz-raw://58e1cb710651bb96b48d34df70c588480492776d49078ff0423dd4618ba32196",
          "dweb:/ipfs/QmVnagPwWwScVQjYW5u76jnNwXrLjddJoVuvmiZqeEsCAK"
        ],
        "license": "MIT"
      },
      "src/presets/utils/StringSet.sol": {
        "keccak256": "0xa84cb2e3161b105e73d5e9da9a8d8d34d48daf3e2809765193b10e7a520eaeca",
        "urls": [
          "bzz-raw://0bb4e41fbe504641cbcf79799b4124571bb6ea19a5c719f65e26085eb0ee44eb",
          "dweb:/ipfs/QmTPpMS2qS5XVgLaJohSBm7ugQ6m3LMAewPjnHazWaAAfi"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/presets/example/RouterRegistryConstrained.sol",
    "id": 1094,
    "exportedSymbols": {
      "BaseRouterWithDefaults": [
        945
      ],
      "DefaultExtensionSet": [
        1338
      ],
      "ERC165": [
        86
      ],
      "ExtensionRegistry": [
        1018
      ],
      "ExtensionState": [
        1923
      ],
      "ExtensionStateStorage": [
        1377
      ],
      "IBaseRouter": [
        133
      ],
      "IDefaultExtensionSet": [
        183
      ],
      "IERC165": [
        98
      ],
      "IExtension": [
        235
      ],
      "IRouter": [
        248
      ],
      "Router": [
        62
      ],
      "RouterRegistryConstrained": [
        1093
      ],
      "StringSet": [
        2221
      ]
    },
    "nodeType": "SourceUnit",
    "src": "106:1746:10",
    "nodes": [
      {
        "id": 978,
        "nodeType": "PragmaDirective",
        "src": "106:23:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 979,
        "nodeType": "ImportDirective",
        "src": "131:39:10",
        "nodes": [],
        "absolutePath": "src/presets/BaseRouterWithDefaults.sol",
        "file": "../BaseRouterWithDefaults.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1094,
        "sourceUnit": 946,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1018,
        "nodeType": "ContractDefinition",
        "src": "259:417:10",
        "nodes": [
          {
            "id": 982,
            "nodeType": "VariableDeclaration",
            "src": "293:30:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "immutable",
            "name": "admin",
            "nameLocation": "318:5:10",
            "scope": 1018,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 981,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "293:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 986,
            "nodeType": "VariableDeclaration",
            "src": "329:45:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "c3c5a547",
            "mutability": "mutable",
            "name": "isRegistered",
            "nameLocation": "362:12:10",
            "scope": 1018,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 985,
              "keyType": {
                "id": 983,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "338:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 984,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "349:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 995,
            "nodeType": "FunctionDefinition",
            "src": "381:49:10",
            "nodes": [],
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "395:35:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 989,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 982,
                      "src": "405:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 990,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "413:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "417:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "413:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "405:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "405:18:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:10"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:10"
            },
            "scope": 1018,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1017,
            "nodeType": "FunctionDefinition",
            "src": "436:238:10",
            "nodes": [],
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "517:157:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1003,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "535:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "539:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "535:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1005,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "549:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "535:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457874656e73696f6e52656769737472793a204f6e6c792061646d696e2063616e20616c74657220657874656e73696f6e207265676973747279",
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "556:60:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7378d5a22326aa66e62538fee5fcfa198860b8336ce9fbb617b9266a41eb2fa2",
                          "typeString": "literal_string \"ExtensionRegistry: Only admin can alter extension registry\""
                        },
                        "value": "ExtensionRegistry: Only admin can alter extension registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7378d5a22326aa66e62538fee5fcfa198860b8336ce9fbb617b9266a41eb2fa2",
                          "typeString": "literal_string \"ExtensionRegistry: Only admin can alter extension registry\""
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "527:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:90:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "527:90:10"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1010,
                        "name": "isRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "627:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1012,
                      "indexExpression": {
                        "id": 1011,
                        "name": "_extension",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "640:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "627:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1013,
                      "name": "_isRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "654:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "627:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "627:40:10"
                }
              ]
            },
            "functionSelector": "6beaa2e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setExtensionRegistered",
            "nameLocation": "445:22:10",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "_extension",
                  "nameLocation": "476:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "468:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_isRegistered",
                  "nameLocation": "493:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "488:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:40:10"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "517:0:10"
            },
            "scope": 1018,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtensionRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 980,
          "nodeType": "StructuredDocumentation",
          "src": "172:86:10",
          "text": "  This smart contract is an EXAMPLE, and is not meant for use in production."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1018
        ],
        "name": "ExtensionRegistry",
        "nameLocation": "268:17:10",
        "scope": 1094,
        "usedErrors": []
      },
      {
        "id": 1093,
        "nodeType": "ContractDefinition",
        "src": "765:1087:10",
        "nodes": [
          {
            "id": 1023,
            "nodeType": "VariableDeclaration",
            "src": "833:20:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "848:5:10",
            "scope": 1093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1022,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "833:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1026,
            "nodeType": "VariableDeclaration",
            "src": "859:33:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "7b103999",
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "884:8:10",
            "scope": 1093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
              "typeString": "contract ExtensionRegistry"
            },
            "typeName": {
              "id": 1025,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1024,
                "name": "ExtensionRegistry",
                "nameLocations": [
                  "859:17:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1018,
                "src": "859:17:10"
              },
              "referencedDeclaration": 1018,
              "src": "859:17:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
                "typeString": "contract ExtensionRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1051,
            "nodeType": "FunctionDefinition",
            "src": "1013:158:10",
            "nodes": [],
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "1087:84:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1039,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "1097:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1040,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1105:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1109:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1105:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1097:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:18:10"
                },
                {
                  "expression": {
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1044,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "1125:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
                        "typeString": "contract ExtensionRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1046,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "1154:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1045,
                        "name": "ExtensionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "1136:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ExtensionRegistry_$1018_$",
                          "typeString": "type(contract ExtensionRegistry)"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1136:28:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
                        "typeString": "contract ExtensionRegistry"
                      }
                    },
                    "src": "1125:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
                      "typeString": "contract ExtensionRegistry"
                    }
                  },
                  "id": 1049,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:39:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1067:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Extension_$205_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IExtension.Extension memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1032,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1031,
                            "name": "Extension",
                            "nameLocations": [
                              "1071:9:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 205,
                            "src": "1071:9:10"
                          },
                          "referencedDeclaration": 205,
                          "src": "1071:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Extension_$205_storage_ptr",
                            "typeString": "struct IExtension.Extension"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ArrayTypeName",
                        "src": "1071:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Extension_$205_storage_$dyn_storage_ptr",
                          "typeString": "struct IExtension.Extension[]"
                        }
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Extension_$205_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IExtension.Extension memory[] memory"
                    }
                  }
                ],
                "id": 1037,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1030,
                  "name": "BaseRouterWithDefaults",
                  "nameLocations": [
                    "1044:22:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 945,
                  "src": "1044:22:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:42:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "1033:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1025:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:19:10"
            },
            "returnParameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:10"
            },
            "scope": 1093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1069,
            "nodeType": "FunctionDefinition",
            "src": "1213:165:10",
            "nodes": [],
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "1256:122:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1057,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1274:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1278:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1274:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1059,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1288:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1274:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465725570677261646561626c653a204f6e6c792061646d696e2063616e207365742061206e65772061646d696e",
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1295:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19927d84e9664ddd78b6e2852919a750a30aad5314fd2dd69bd9d1bd3bc1a6db",
                          "typeString": "literal_string \"RouterUpgradeable: Only admin can set a new admin\""
                        },
                        "value": "RouterUpgradeable: Only admin can set a new admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19927d84e9664ddd78b6e2852919a750a30aad5314fd2dd69bd9d1bd3bc1a6db",
                          "typeString": "literal_string \"RouterUpgradeable: Only admin can set a new admin\""
                        }
                      ],
                      "id": 1056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1266:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1266:81:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:81:10"
                },
                {
                  "expression": {
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1064,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "1357:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1065,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "1365:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1357:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:14:10"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAdmin",
            "nameLocation": "1222:8:10",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1239:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1231:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1230:16:10"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:0:10"
            },
            "scope": 1093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1092,
            "nodeType": "FunctionDefinition",
            "src": "1645:205:10",
            "nodes": [],
            "body": {
              "id": 1091,
              "nodeType": "Block",
              "src": "1746:104:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1079,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1763:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1767:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1763:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1081,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "1777:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1763:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 1085,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "1808:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Extension_$205_memory_ptr",
                                "typeString": "struct IExtension.Extension memory"
                              }
                            },
                            "id": 1086,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1819:8:10",
                            "memberName": "metadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 200,
                            "src": "1808:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExtensionMetadata_$192_memory_ptr",
                              "typeString": "struct IExtension.ExtensionMetadata memory"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1828:14:10",
                          "memberName": "implementation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 191,
                          "src": "1808:34:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1083,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "1786:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExtensionRegistry_$1018",
                            "typeString": "contract ExtensionRegistry"
                          }
                        },
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1795:12:10",
                        "memberName": "isRegistered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "1786:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1786:57:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1763:80:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1078,
                  "id": 1090,
                  "nodeType": "Return",
                  "src": "1756:87:10"
                }
              ]
            },
            "baseFunctions": [
              944
            ],
            "documentation": {
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "1562:78:10",
              "text": "@dev Returns whether extensions can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetExtension",
            "nameLocation": "1654:16:10",
            "overrides": {
              "id": 1075,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1722:8:10"
            },
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "_extension",
                  "nameLocation": "1688:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1092,
                  "src": "1671:27:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Extension_$205_memory_ptr",
                    "typeString": "struct IExtension.Extension"
                  },
                  "typeName": {
                    "id": 1072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1071,
                      "name": "Extension",
                      "nameLocations": [
                        "1671:9:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 205,
                      "src": "1671:9:10"
                    },
                    "referencedDeclaration": 205,
                    "src": "1671:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Extension_$205_storage_ptr",
                      "typeString": "struct IExtension.Extension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1670:29:10"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1092,
                  "src": "1740:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1739:6:10"
            },
            "scope": 1093,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1020,
              "name": "BaseRouterWithDefaults",
              "nameLocations": [
                "803:22:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 945,
              "src": "803:22:10"
            },
            "id": 1021,
            "nodeType": "InheritanceSpecifier",
            "src": "803:22:10"
          }
        ],
        "canonicalName": "RouterRegistryConstrained",
        "contractDependencies": [
          1338
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1019,
          "nodeType": "StructuredDocumentation",
          "src": "678:86:10",
          "text": "  This smart contract is an EXAMPLE, and is not meant for use in production."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1093,
          945,
          1923,
          62,
          86,
          98,
          248,
          133,
          183,
          235
        ],
        "name": "RouterRegistryConstrained",
        "nameLocation": "774:25:10",
        "scope": 1094,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}