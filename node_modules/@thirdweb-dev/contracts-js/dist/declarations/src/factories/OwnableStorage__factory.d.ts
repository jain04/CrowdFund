import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OwnableStorage, OwnableStorageInterface } from "../OwnableStorage.js";
type OwnableStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class OwnableStorage__factory extends ContractFactory {
    constructor(...args: OwnableStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<OwnableStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): OwnableStorage;
    connect(signer: Signer): OwnableStorage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f8f20d63146038575b600080fd5b605e7ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f81565b60405190815260200160405180910390f3fea264697066735822122083330725f1f0e59a567dabd555a37e8dc7f7b5b485bfc55dbd2538376aa13c4b64736f6c634300080c0033";
    static readonly abi: {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): OwnableStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OwnableStorage;
}
export {};
//# sourceMappingURL=OwnableStorage__factory.d.ts.map