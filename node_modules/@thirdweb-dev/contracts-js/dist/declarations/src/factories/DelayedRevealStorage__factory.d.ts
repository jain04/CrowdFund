import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelayedRevealStorage, DelayedRevealStorageInterface } from "../DelayedRevealStorage.js";
type DelayedRevealStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DelayedRevealStorage__factory extends ContractFactory {
    constructor(...args: DelayedRevealStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<DelayedRevealStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): DelayedRevealStorage;
    connect(signer: Signer): DelayedRevealStorage__factory;
    static readonly bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80631c46bf9c146038575b600080fd5b605e7f5a931efe29bc5aac3b2104f3d22aa57ffd5882b744fbcd4ab53728e57cea156381565b60405190815260200160405180910390f3fea2646970667358221220c093fd78588a3d3a29e33eedb0d1863b958bf7f70e30221a564cd10a5f726c5264736f6c634300080c0033";
    static readonly abi: {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DelayedRevealStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DelayedRevealStorage;
}
export {};
//# sourceMappingURL=DelayedRevealStorage__factory.d.ts.map